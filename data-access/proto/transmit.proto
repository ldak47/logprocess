syntax = "proto2";

package process;
option cc_generic_services = true;

message MapEntry {
    required string Key = 1;
    required string Value = 2;
}

message MapEntries {
    repeated MapEntry Item = 1;
}

message TransmitRequest {
    repeated MapEntry Values = 1;
}

message TransmitResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
}

enum CondType {
    condIn = 1;
    condNotIn = 2;
    condIs = 3;

    condExist = 4;
    condNotExist = 5;

    condEqual = 6;
    condPartEqual = 7;
    condNotEqual = 8;

    condLarger = 9;
    condSmaller = 10;

    condIsFront = 11;
    condIsBehind = 12;
}

message TypeConfig {
    required string Type = 1;
    required CondType Cond = 2;
}

message SrcidConfig {
    required string Srcid = 1;
    required CondType Cond = 2;
}

message ScanCondSeWord {
    required string Searchword = 1;
    required CondType Cond = 2;
}

message LocationInfo {
    optional string Province = 1;
    optional string City = 2;
    required CondType Cond = 3;
}

message CookieConfig {
    required string Cookie = 1;
    required CondType Cond = 2;
}

message ClusterConfig {
    required string Cluster = 1;
    required CondType Cond = 2;
}

message SidConfig {
    required string Sid = 1;
    required CondType Cond = 2;
}

message ResnoConfig {
    required string Resno = 1;
    required CondType Cond = 2;
}

message CheckListCond {
    repeated SrcidConfig Srcids = 1;
    repeated ScanCondSeWord Sewords = 2;
    repeated LocationInfo Lbs = 3;
    repeated CookieConfig Cookie = 4;
    repeated ClusterConfig Cluster = 5;
    repeated SidConfig Sid = 6;
    repeated ResnoConfig Resno = 7;
    repeated TypeConfig Type = 8;
    optional string Description = 9;
}

message SetCheckListConfigRequest {
    required bool Op = 1;           //true: add|false: del
    optional uint32 Index = 2;
    required string Application = 3;
    optional CheckListCond Cond = 4;
}

message SetCheckListConfigResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
}

message GetCheckListConfigRequest {
    required string Application = 1;
    optional uint32 Index = 2;
    optional uint64 Startime = 3;
    optional uint64 Endime = 4;
}

message CheckListConfigResponseInfo {
    required CheckListCond Cond = 1;
    required uint32 Hit_count = 2;
    repeated string Hit_info = 3;
}

message GetCheckListConfigResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
    repeated CheckListCond Cond = 3;
    
}

message GetLogProcessStatRequest {
    enum SourceFrom {
        Rocksdb = 0;
        QueryTrie = 1;
        Redis = 2;
    }

    optional string Application = 1;
    optional string Querystr = 2;
    optional string Cookieid = 3;
    optional string Srcid = 4;
    optional uint64 Startime = 5;
    optional uint64 Endtime = 6;
    optional CheckListCond Cond = 7;
    repeated string Selectfields = 8;
    optional string Sortfield = 9;
    required SourceFrom Getfrom = 10;

    optional uint32 Start = 11;
    optional uint32 End = 12;
}

message GetLogProcessStatResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
    required uint64 Count = 3;
    repeated MapEntries Iteminfos = 4;
    optional string Result = 5;
}

message SetStorageFieldConfigRequest {
    required string Application = 1;
    required bool Op = 2;           //false:del true:add
    repeated string Fields = 3;
}

message SetStorageFieldConfigResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
}

message GetStorageFieldConfigRequest {
    optional string Application = 1;
}

message StorageFieldConfigResponseInfo {
    required string Application = 1;
    repeated string Fields = 2;
}

message GetStorageFieldConfigResponse {
    repeated StorageFieldConfigResponseInfo Checklists = 1;
}

message ClearRocksdbDataRequest {
    required string Application = 1;
    required uint64 Startime = 2;
    required uint64 Endtime = 3;
}

message ClearRocksdbDataResponse {
    enum Res_Status {
        SUCCEED = 0;
        FAILED = 1;
    }

    required Res_Status Status = 1;
    optional string Error = 2;
}

service ProcessService {
    rpc Transmit(TransmitRequest) returns(TransmitResponse);

    rpc SetCheckListConfig(SetCheckListConfigRequest) returns(SetCheckListConfigResponse);
    rpc GetCheckListConfig(GetCheckListConfigRequest) returns(GetCheckListConfigResponse);

    rpc SetStorageFieldConfig(SetStorageFieldConfigRequest) returns(SetStorageFieldConfigResponse);
    rpc GetStorageFieldConfig(GetStorageFieldConfigRequest) returns(GetStorageFieldConfigResponse);

    rpc GetLogProcessStat(GetLogProcessStatRequest) returns(GetLogProcessStatResponse);
    rpc ClearRocksdbData(ClearRocksdbDataRequest) returns(ClearRocksdbDataResponse);
}
