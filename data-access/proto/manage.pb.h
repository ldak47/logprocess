// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manage.proto

#ifndef PROTOBUF_manage_2eproto__INCLUDED
#define PROTOBUF_manage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace manage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_manage_2eproto();
void protobuf_AssignDesc_manage_2eproto();
void protobuf_ShutdownFile_manage_2eproto();

class FiledConfig;
class SetLogFieldConfigRequest;
class SetLogFieldConfigResponse;
class GetLogFieldConfigRequest;
class GetLogFieldConfigResponse;
class GetLogTransmitStatRequest;
class GetLogTransmitStatResponse;

enum SetLogFieldConfigResponse_Res_Status {
  SetLogFieldConfigResponse_Res_Status_SUCCEED = 0,
  SetLogFieldConfigResponse_Res_Status_FAILED = 1
};
bool SetLogFieldConfigResponse_Res_Status_IsValid(int value);
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse_Res_Status_Res_Status_MIN = SetLogFieldConfigResponse_Res_Status_SUCCEED;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse_Res_Status_Res_Status_MAX = SetLogFieldConfigResponse_Res_Status_FAILED;
const int SetLogFieldConfigResponse_Res_Status_Res_Status_ARRAYSIZE = SetLogFieldConfigResponse_Res_Status_Res_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetLogFieldConfigResponse_Res_Status_descriptor();
inline const ::std::string& SetLogFieldConfigResponse_Res_Status_Name(SetLogFieldConfigResponse_Res_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetLogFieldConfigResponse_Res_Status_descriptor(), value);
}
inline bool SetLogFieldConfigResponse_Res_Status_Parse(
    const ::std::string& name, SetLogFieldConfigResponse_Res_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetLogFieldConfigResponse_Res_Status>(
    SetLogFieldConfigResponse_Res_Status_descriptor(), name, value);
}
enum GetLogFieldConfigResponse_Res_Status {
  GetLogFieldConfigResponse_Res_Status_SUCCEED = 0,
  GetLogFieldConfigResponse_Res_Status_FAILED = 1
};
bool GetLogFieldConfigResponse_Res_Status_IsValid(int value);
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse_Res_Status_Res_Status_MIN = GetLogFieldConfigResponse_Res_Status_SUCCEED;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse_Res_Status_Res_Status_MAX = GetLogFieldConfigResponse_Res_Status_FAILED;
const int GetLogFieldConfigResponse_Res_Status_Res_Status_ARRAYSIZE = GetLogFieldConfigResponse_Res_Status_Res_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetLogFieldConfigResponse_Res_Status_descriptor();
inline const ::std::string& GetLogFieldConfigResponse_Res_Status_Name(GetLogFieldConfigResponse_Res_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetLogFieldConfigResponse_Res_Status_descriptor(), value);
}
inline bool GetLogFieldConfigResponse_Res_Status_Parse(
    const ::std::string& name, GetLogFieldConfigResponse_Res_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetLogFieldConfigResponse_Res_Status>(
    GetLogFieldConfigResponse_Res_Status_descriptor(), name, value);
}
enum GetLogTransmitStatResponse_Res_Status {
  GetLogTransmitStatResponse_Res_Status_SUCCEED = 0,
  GetLogTransmitStatResponse_Res_Status_FAILED = 1
};
bool GetLogTransmitStatResponse_Res_Status_IsValid(int value);
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse_Res_Status_Res_Status_MIN = GetLogTransmitStatResponse_Res_Status_SUCCEED;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse_Res_Status_Res_Status_MAX = GetLogTransmitStatResponse_Res_Status_FAILED;
const int GetLogTransmitStatResponse_Res_Status_Res_Status_ARRAYSIZE = GetLogTransmitStatResponse_Res_Status_Res_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetLogTransmitStatResponse_Res_Status_descriptor();
inline const ::std::string& GetLogTransmitStatResponse_Res_Status_Name(GetLogTransmitStatResponse_Res_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetLogTransmitStatResponse_Res_Status_descriptor(), value);
}
inline bool GetLogTransmitStatResponse_Res_Status_Parse(
    const ::std::string& name, GetLogTransmitStatResponse_Res_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetLogTransmitStatResponse_Res_Status>(
    GetLogTransmitStatResponse_Res_Status_descriptor(), name, value);
}
// ===================================================================

class FiledConfig : public ::google::protobuf::Message {
 public:
  FiledConfig();
  virtual ~FiledConfig();

  FiledConfig(const FiledConfig& from);

  inline FiledConfig& operator=(const FiledConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FiledConfig& default_instance();

  void Swap(FiledConfig* other);

  // implements Message ----------------------------------------------

  FiledConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FiledConfig& from);
  void MergeFrom(const FiledConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string field = 1;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 1;
  inline const ::std::string& field() const;
  inline void set_field(const ::std::string& value);
  inline void set_field(const char* value);
  inline void set_field(const char* value, size_t size);
  inline ::std::string* mutable_field();
  inline ::std::string* release_field();
  inline void set_allocated_field(::std::string* field);

  // required string regex = 2;
  inline bool has_regex() const;
  inline void clear_regex();
  static const int kRegexFieldNumber = 2;
  inline const ::std::string& regex() const;
  inline void set_regex(const ::std::string& value);
  inline void set_regex(const char* value);
  inline void set_regex(const char* value, size_t size);
  inline ::std::string* mutable_regex();
  inline ::std::string* release_regex();
  inline void set_allocated_regex(::std::string* regex);

  // @@protoc_insertion_point(class_scope:manage.FiledConfig)
 private:
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_regex();
  inline void clear_has_regex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* field_;
  ::std::string* regex_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static FiledConfig* default_instance_;
};
// -------------------------------------------------------------------

class SetLogFieldConfigRequest : public ::google::protobuf::Message {
 public:
  SetLogFieldConfigRequest();
  virtual ~SetLogFieldConfigRequest();

  SetLogFieldConfigRequest(const SetLogFieldConfigRequest& from);

  inline SetLogFieldConfigRequest& operator=(const SetLogFieldConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLogFieldConfigRequest& default_instance();

  void Swap(SetLogFieldConfigRequest* other);

  // implements Message ----------------------------------------------

  SetLogFieldConfigRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetLogFieldConfigRequest& from);
  void MergeFrom(const SetLogFieldConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string application = 1;
  inline bool has_application() const;
  inline void clear_application();
  static const int kApplicationFieldNumber = 1;
  inline const ::std::string& application() const;
  inline void set_application(const ::std::string& value);
  inline void set_application(const char* value);
  inline void set_application(const char* value, size_t size);
  inline ::std::string* mutable_application();
  inline ::std::string* release_application();
  inline void set_allocated_application(::std::string* application);

  // repeated .manage.FiledConfig fieldconfigs = 2;
  inline int fieldconfigs_size() const;
  inline void clear_fieldconfigs();
  static const int kFieldconfigsFieldNumber = 2;
  inline const ::manage::FiledConfig& fieldconfigs(int index) const;
  inline ::manage::FiledConfig* mutable_fieldconfigs(int index);
  inline ::manage::FiledConfig* add_fieldconfigs();
  inline const ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >&
      fieldconfigs() const;
  inline ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >*
      mutable_fieldconfigs();

  // @@protoc_insertion_point(class_scope:manage.SetLogFieldConfigRequest)
 private:
  inline void set_has_application();
  inline void clear_has_application();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* application_;
  ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig > fieldconfigs_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static SetLogFieldConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetLogFieldConfigResponse : public ::google::protobuf::Message {
 public:
  SetLogFieldConfigResponse();
  virtual ~SetLogFieldConfigResponse();

  SetLogFieldConfigResponse(const SetLogFieldConfigResponse& from);

  inline SetLogFieldConfigResponse& operator=(const SetLogFieldConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLogFieldConfigResponse& default_instance();

  void Swap(SetLogFieldConfigResponse* other);

  // implements Message ----------------------------------------------

  SetLogFieldConfigResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetLogFieldConfigResponse& from);
  void MergeFrom(const SetLogFieldConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SetLogFieldConfigResponse_Res_Status Res_Status;
  static const Res_Status SUCCEED = SetLogFieldConfigResponse_Res_Status_SUCCEED;
  static const Res_Status FAILED = SetLogFieldConfigResponse_Res_Status_FAILED;
  static inline bool Res_Status_IsValid(int value) {
    return SetLogFieldConfigResponse_Res_Status_IsValid(value);
  }
  static const Res_Status Res_Status_MIN =
    SetLogFieldConfigResponse_Res_Status_Res_Status_MIN;
  static const Res_Status Res_Status_MAX =
    SetLogFieldConfigResponse_Res_Status_Res_Status_MAX;
  static const int Res_Status_ARRAYSIZE =
    SetLogFieldConfigResponse_Res_Status_Res_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Res_Status_descriptor() {
    return SetLogFieldConfigResponse_Res_Status_descriptor();
  }
  static inline const ::std::string& Res_Status_Name(Res_Status value) {
    return SetLogFieldConfigResponse_Res_Status_Name(value);
  }
  static inline bool Res_Status_Parse(const ::std::string& name,
      Res_Status* value) {
    return SetLogFieldConfigResponse_Res_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::manage::SetLogFieldConfigResponse_Res_Status status() const;
  inline void set_status(::manage::SetLogFieldConfigResponse_Res_Status value);

  // optional string error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:manage.SetLogFieldConfigResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  int status_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static SetLogFieldConfigResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetLogFieldConfigRequest : public ::google::protobuf::Message {
 public:
  GetLogFieldConfigRequest();
  virtual ~GetLogFieldConfigRequest();

  GetLogFieldConfigRequest(const GetLogFieldConfigRequest& from);

  inline GetLogFieldConfigRequest& operator=(const GetLogFieldConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLogFieldConfigRequest& default_instance();

  void Swap(GetLogFieldConfigRequest* other);

  // implements Message ----------------------------------------------

  GetLogFieldConfigRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLogFieldConfigRequest& from);
  void MergeFrom(const GetLogFieldConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string application = 1;
  inline bool has_application() const;
  inline void clear_application();
  static const int kApplicationFieldNumber = 1;
  inline const ::std::string& application() const;
  inline void set_application(const ::std::string& value);
  inline void set_application(const char* value);
  inline void set_application(const char* value, size_t size);
  inline ::std::string* mutable_application();
  inline ::std::string* release_application();
  inline void set_allocated_application(::std::string* application);

  // optional string field = 2;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 2;
  inline const ::std::string& field() const;
  inline void set_field(const ::std::string& value);
  inline void set_field(const char* value);
  inline void set_field(const char* value, size_t size);
  inline ::std::string* mutable_field();
  inline ::std::string* release_field();
  inline void set_allocated_field(::std::string* field);

  // @@protoc_insertion_point(class_scope:manage.GetLogFieldConfigRequest)
 private:
  inline void set_has_application();
  inline void clear_has_application();
  inline void set_has_field();
  inline void clear_has_field();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* application_;
  ::std::string* field_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static GetLogFieldConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetLogFieldConfigResponse : public ::google::protobuf::Message {
 public:
  GetLogFieldConfigResponse();
  virtual ~GetLogFieldConfigResponse();

  GetLogFieldConfigResponse(const GetLogFieldConfigResponse& from);

  inline GetLogFieldConfigResponse& operator=(const GetLogFieldConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLogFieldConfigResponse& default_instance();

  void Swap(GetLogFieldConfigResponse* other);

  // implements Message ----------------------------------------------

  GetLogFieldConfigResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLogFieldConfigResponse& from);
  void MergeFrom(const GetLogFieldConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetLogFieldConfigResponse_Res_Status Res_Status;
  static const Res_Status SUCCEED = GetLogFieldConfigResponse_Res_Status_SUCCEED;
  static const Res_Status FAILED = GetLogFieldConfigResponse_Res_Status_FAILED;
  static inline bool Res_Status_IsValid(int value) {
    return GetLogFieldConfigResponse_Res_Status_IsValid(value);
  }
  static const Res_Status Res_Status_MIN =
    GetLogFieldConfigResponse_Res_Status_Res_Status_MIN;
  static const Res_Status Res_Status_MAX =
    GetLogFieldConfigResponse_Res_Status_Res_Status_MAX;
  static const int Res_Status_ARRAYSIZE =
    GetLogFieldConfigResponse_Res_Status_Res_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Res_Status_descriptor() {
    return GetLogFieldConfigResponse_Res_Status_descriptor();
  }
  static inline const ::std::string& Res_Status_Name(Res_Status value) {
    return GetLogFieldConfigResponse_Res_Status_Name(value);
  }
  static inline bool Res_Status_Parse(const ::std::string& name,
      Res_Status* value) {
    return GetLogFieldConfigResponse_Res_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::manage::GetLogFieldConfigResponse_Res_Status status() const;
  inline void set_status(::manage::GetLogFieldConfigResponse_Res_Status value);

  // optional string error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // repeated .manage.FiledConfig fieldconfigs = 3;
  inline int fieldconfigs_size() const;
  inline void clear_fieldconfigs();
  static const int kFieldconfigsFieldNumber = 3;
  inline const ::manage::FiledConfig& fieldconfigs(int index) const;
  inline ::manage::FiledConfig* mutable_fieldconfigs(int index);
  inline ::manage::FiledConfig* add_fieldconfigs();
  inline const ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >&
      fieldconfigs() const;
  inline ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >*
      mutable_fieldconfigs();

  // @@protoc_insertion_point(class_scope:manage.GetLogFieldConfigResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig > fieldconfigs_;
  int status_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static GetLogFieldConfigResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetLogTransmitStatRequest : public ::google::protobuf::Message {
 public:
  GetLogTransmitStatRequest();
  virtual ~GetLogTransmitStatRequest();

  GetLogTransmitStatRequest(const GetLogTransmitStatRequest& from);

  inline GetLogTransmitStatRequest& operator=(const GetLogTransmitStatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLogTransmitStatRequest& default_instance();

  void Swap(GetLogTransmitStatRequest* other);

  // implements Message ----------------------------------------------

  GetLogTransmitStatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLogTransmitStatRequest& from);
  void MergeFrom(const GetLogTransmitStatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string application = 1;
  inline bool has_application() const;
  inline void clear_application();
  static const int kApplicationFieldNumber = 1;
  inline const ::std::string& application() const;
  inline void set_application(const ::std::string& value);
  inline void set_application(const char* value);
  inline void set_application(const char* value, size_t size);
  inline ::std::string* mutable_application();
  inline ::std::string* release_application();
  inline void set_allocated_application(::std::string* application);

  // optional bool logtype = 2;
  inline bool has_logtype() const;
  inline void clear_logtype();
  static const int kLogtypeFieldNumber = 2;
  inline bool logtype() const;
  inline void set_logtype(bool value);

  // required int64 startime = 3;
  inline bool has_startime() const;
  inline void clear_startime();
  static const int kStartimeFieldNumber = 3;
  inline ::google::protobuf::int64 startime() const;
  inline void set_startime(::google::protobuf::int64 value);

  // required int64 endtime = 4;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  inline ::google::protobuf::int64 endtime() const;
  inline void set_endtime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:manage.GetLogTransmitStatRequest)
 private:
  inline void set_has_application();
  inline void clear_has_application();
  inline void set_has_logtype();
  inline void clear_has_logtype();
  inline void set_has_startime();
  inline void clear_has_startime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* application_;
  ::google::protobuf::int64 startime_;
  ::google::protobuf::int64 endtime_;
  bool logtype_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static GetLogTransmitStatRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetLogTransmitStatResponse : public ::google::protobuf::Message {
 public:
  GetLogTransmitStatResponse();
  virtual ~GetLogTransmitStatResponse();

  GetLogTransmitStatResponse(const GetLogTransmitStatResponse& from);

  inline GetLogTransmitStatResponse& operator=(const GetLogTransmitStatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLogTransmitStatResponse& default_instance();

  void Swap(GetLogTransmitStatResponse* other);

  // implements Message ----------------------------------------------

  GetLogTransmitStatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLogTransmitStatResponse& from);
  void MergeFrom(const GetLogTransmitStatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetLogTransmitStatResponse_Res_Status Res_Status;
  static const Res_Status SUCCEED = GetLogTransmitStatResponse_Res_Status_SUCCEED;
  static const Res_Status FAILED = GetLogTransmitStatResponse_Res_Status_FAILED;
  static inline bool Res_Status_IsValid(int value) {
    return GetLogTransmitStatResponse_Res_Status_IsValid(value);
  }
  static const Res_Status Res_Status_MIN =
    GetLogTransmitStatResponse_Res_Status_Res_Status_MIN;
  static const Res_Status Res_Status_MAX =
    GetLogTransmitStatResponse_Res_Status_Res_Status_MAX;
  static const int Res_Status_ARRAYSIZE =
    GetLogTransmitStatResponse_Res_Status_Res_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Res_Status_descriptor() {
    return GetLogTransmitStatResponse_Res_Status_descriptor();
  }
  static inline const ::std::string& Res_Status_Name(Res_Status value) {
    return GetLogTransmitStatResponse_Res_Status_Name(value);
  }
  static inline bool Res_Status_Parse(const ::std::string& name,
      Res_Status* value) {
    return GetLogTransmitStatResponse_Res_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::manage::GetLogTransmitStatResponse_Res_Status status() const;
  inline void set_status(::manage::GetLogTransmitStatResponse_Res_Status value);

  // optional string error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // required int64 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int64 num() const;
  inline void set_num(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:manage.GetLogTransmitStatResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_;
  ::google::protobuf::int64 num_;
  int status_;
  friend void  protobuf_AddDesc_manage_2eproto();
  friend void protobuf_AssignDesc_manage_2eproto();
  friend void protobuf_ShutdownFile_manage_2eproto();

  void InitAsDefaultInstance();
  static GetLogTransmitStatResponse* default_instance_;
};
// ===================================================================

class ManageService_Stub;

class ManageService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ManageService() {};
 public:
  virtual ~ManageService();

  typedef ManageService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void SetLogFieldConfig(::google::protobuf::RpcController* controller,
                       const ::manage::SetLogFieldConfigRequest* request,
                       ::manage::SetLogFieldConfigResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetLogFieldConfig(::google::protobuf::RpcController* controller,
                       const ::manage::GetLogFieldConfigRequest* request,
                       ::manage::GetLogFieldConfigResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetLogTransmitStat(::google::protobuf::RpcController* controller,
                       const ::manage::GetLogTransmitStatRequest* request,
                       ::manage::GetLogTransmitStatResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ManageService);
};

class ManageService_Stub : public ManageService {
 public:
  ManageService_Stub(::google::protobuf::RpcChannel* channel);
  ManageService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ManageService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ManageService ------------------------------------------

  void SetLogFieldConfig(::google::protobuf::RpcController* controller,
                       const ::manage::SetLogFieldConfigRequest* request,
                       ::manage::SetLogFieldConfigResponse* response,
                       ::google::protobuf::Closure* done);
  void GetLogFieldConfig(::google::protobuf::RpcController* controller,
                       const ::manage::GetLogFieldConfigRequest* request,
                       ::manage::GetLogFieldConfigResponse* response,
                       ::google::protobuf::Closure* done);
  void GetLogTransmitStat(::google::protobuf::RpcController* controller,
                       const ::manage::GetLogTransmitStatRequest* request,
                       ::manage::GetLogTransmitStatResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ManageService_Stub);
};


// ===================================================================


// ===================================================================

// FiledConfig

// required string field = 1;
inline bool FiledConfig::has_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FiledConfig::set_has_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FiledConfig::clear_has_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FiledConfig::clear_field() {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_->clear();
  }
  clear_has_field();
}
inline const ::std::string& FiledConfig::field() const {
  // @@protoc_insertion_point(field_get:manage.FiledConfig.field)
  return *field_;
}
inline void FiledConfig::set_field(const ::std::string& value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(value);
  // @@protoc_insertion_point(field_set:manage.FiledConfig.field)
}
inline void FiledConfig::set_field(const char* value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.FiledConfig.field)
}
inline void FiledConfig::set_field(const char* value, size_t size) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.FiledConfig.field)
}
inline ::std::string* FiledConfig::mutable_field() {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.FiledConfig.field)
  return field_;
}
inline ::std::string* FiledConfig::release_field() {
  clear_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = field_;
    field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FiledConfig::set_allocated_field(::std::string* field) {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (field) {
    set_has_field();
    field_ = field;
  } else {
    clear_has_field();
    field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.FiledConfig.field)
}

// required string regex = 2;
inline bool FiledConfig::has_regex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FiledConfig::set_has_regex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FiledConfig::clear_has_regex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FiledConfig::clear_regex() {
  if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regex_->clear();
  }
  clear_has_regex();
}
inline const ::std::string& FiledConfig::regex() const {
  // @@protoc_insertion_point(field_get:manage.FiledConfig.regex)
  return *regex_;
}
inline void FiledConfig::set_regex(const ::std::string& value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
  // @@protoc_insertion_point(field_set:manage.FiledConfig.regex)
}
inline void FiledConfig::set_regex(const char* value) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regex_ = new ::std::string;
  }
  regex_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.FiledConfig.regex)
}
inline void FiledConfig::set_regex(const char* value, size_t size) {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regex_ = new ::std::string;
  }
  regex_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.FiledConfig.regex)
}
inline ::std::string* FiledConfig::mutable_regex() {
  set_has_regex();
  if (regex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regex_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.FiledConfig.regex)
  return regex_;
}
inline ::std::string* FiledConfig::release_regex() {
  clear_has_regex();
  if (regex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = regex_;
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FiledConfig::set_allocated_regex(::std::string* regex) {
  if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regex_;
  }
  if (regex) {
    set_has_regex();
    regex_ = regex;
  } else {
    clear_has_regex();
    regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.FiledConfig.regex)
}

// -------------------------------------------------------------------

// SetLogFieldConfigRequest

// required string application = 1;
inline bool SetLogFieldConfigRequest::has_application() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetLogFieldConfigRequest::set_has_application() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetLogFieldConfigRequest::clear_has_application() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetLogFieldConfigRequest::clear_application() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_->clear();
  }
  clear_has_application();
}
inline const ::std::string& SetLogFieldConfigRequest::application() const {
  // @@protoc_insertion_point(field_get:manage.SetLogFieldConfigRequest.application)
  return *application_;
}
inline void SetLogFieldConfigRequest::set_application(const ::std::string& value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set:manage.SetLogFieldConfigRequest.application)
}
inline void SetLogFieldConfigRequest::set_application(const char* value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.SetLogFieldConfigRequest.application)
}
inline void SetLogFieldConfigRequest::set_application(const char* value, size_t size) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.SetLogFieldConfigRequest.application)
}
inline ::std::string* SetLogFieldConfigRequest::mutable_application() {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.SetLogFieldConfigRequest.application)
  return application_;
}
inline ::std::string* SetLogFieldConfigRequest::release_application() {
  clear_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = application_;
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetLogFieldConfigRequest::set_allocated_application(::std::string* application) {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (application) {
    set_has_application();
    application_ = application;
  } else {
    clear_has_application();
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.SetLogFieldConfigRequest.application)
}

// repeated .manage.FiledConfig fieldconfigs = 2;
inline int SetLogFieldConfigRequest::fieldconfigs_size() const {
  return fieldconfigs_.size();
}
inline void SetLogFieldConfigRequest::clear_fieldconfigs() {
  fieldconfigs_.Clear();
}
inline const ::manage::FiledConfig& SetLogFieldConfigRequest::fieldconfigs(int index) const {
  // @@protoc_insertion_point(field_get:manage.SetLogFieldConfigRequest.fieldconfigs)
  return fieldconfigs_.Get(index);
}
inline ::manage::FiledConfig* SetLogFieldConfigRequest::mutable_fieldconfigs(int index) {
  // @@protoc_insertion_point(field_mutable:manage.SetLogFieldConfigRequest.fieldconfigs)
  return fieldconfigs_.Mutable(index);
}
inline ::manage::FiledConfig* SetLogFieldConfigRequest::add_fieldconfigs() {
  // @@protoc_insertion_point(field_add:manage.SetLogFieldConfigRequest.fieldconfigs)
  return fieldconfigs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >&
SetLogFieldConfigRequest::fieldconfigs() const {
  // @@protoc_insertion_point(field_list:manage.SetLogFieldConfigRequest.fieldconfigs)
  return fieldconfigs_;
}
inline ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >*
SetLogFieldConfigRequest::mutable_fieldconfigs() {
  // @@protoc_insertion_point(field_mutable_list:manage.SetLogFieldConfigRequest.fieldconfigs)
  return &fieldconfigs_;
}

// -------------------------------------------------------------------

// SetLogFieldConfigResponse

// required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
inline bool SetLogFieldConfigResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetLogFieldConfigResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetLogFieldConfigResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetLogFieldConfigResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::manage::SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::status() const {
  // @@protoc_insertion_point(field_get:manage.SetLogFieldConfigResponse.status)
  return static_cast< ::manage::SetLogFieldConfigResponse_Res_Status >(status_);
}
inline void SetLogFieldConfigResponse::set_status(::manage::SetLogFieldConfigResponse_Res_Status value) {
  assert(::manage::SetLogFieldConfigResponse_Res_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:manage.SetLogFieldConfigResponse.status)
}

// optional string error = 2;
inline bool SetLogFieldConfigResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetLogFieldConfigResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetLogFieldConfigResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetLogFieldConfigResponse::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& SetLogFieldConfigResponse::error() const {
  // @@protoc_insertion_point(field_get:manage.SetLogFieldConfigResponse.error)
  return *error_;
}
inline void SetLogFieldConfigResponse::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:manage.SetLogFieldConfigResponse.error)
}
inline void SetLogFieldConfigResponse::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.SetLogFieldConfigResponse.error)
}
inline void SetLogFieldConfigResponse::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.SetLogFieldConfigResponse.error)
}
inline ::std::string* SetLogFieldConfigResponse::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.SetLogFieldConfigResponse.error)
  return error_;
}
inline ::std::string* SetLogFieldConfigResponse::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetLogFieldConfigResponse::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.SetLogFieldConfigResponse.error)
}

// -------------------------------------------------------------------

// GetLogFieldConfigRequest

// optional string application = 1;
inline bool GetLogFieldConfigRequest::has_application() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLogFieldConfigRequest::set_has_application() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLogFieldConfigRequest::clear_has_application() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLogFieldConfigRequest::clear_application() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_->clear();
  }
  clear_has_application();
}
inline const ::std::string& GetLogFieldConfigRequest::application() const {
  // @@protoc_insertion_point(field_get:manage.GetLogFieldConfigRequest.application)
  return *application_;
}
inline void GetLogFieldConfigRequest::set_application(const ::std::string& value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set:manage.GetLogFieldConfigRequest.application)
}
inline void GetLogFieldConfigRequest::set_application(const char* value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.GetLogFieldConfigRequest.application)
}
inline void GetLogFieldConfigRequest::set_application(const char* value, size_t size) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.GetLogFieldConfigRequest.application)
}
inline ::std::string* GetLogFieldConfigRequest::mutable_application() {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.GetLogFieldConfigRequest.application)
  return application_;
}
inline ::std::string* GetLogFieldConfigRequest::release_application() {
  clear_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = application_;
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLogFieldConfigRequest::set_allocated_application(::std::string* application) {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (application) {
    set_has_application();
    application_ = application;
  } else {
    clear_has_application();
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.GetLogFieldConfigRequest.application)
}

// optional string field = 2;
inline bool GetLogFieldConfigRequest::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLogFieldConfigRequest::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLogFieldConfigRequest::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLogFieldConfigRequest::clear_field() {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_->clear();
  }
  clear_has_field();
}
inline const ::std::string& GetLogFieldConfigRequest::field() const {
  // @@protoc_insertion_point(field_get:manage.GetLogFieldConfigRequest.field)
  return *field_;
}
inline void GetLogFieldConfigRequest::set_field(const ::std::string& value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(value);
  // @@protoc_insertion_point(field_set:manage.GetLogFieldConfigRequest.field)
}
inline void GetLogFieldConfigRequest::set_field(const char* value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.GetLogFieldConfigRequest.field)
}
inline void GetLogFieldConfigRequest::set_field(const char* value, size_t size) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  field_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.GetLogFieldConfigRequest.field)
}
inline ::std::string* GetLogFieldConfigRequest::mutable_field() {
  set_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    field_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.GetLogFieldConfigRequest.field)
  return field_;
}
inline ::std::string* GetLogFieldConfigRequest::release_field() {
  clear_has_field();
  if (field_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = field_;
    field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLogFieldConfigRequest::set_allocated_field(::std::string* field) {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (field) {
    set_has_field();
    field_ = field;
  } else {
    clear_has_field();
    field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.GetLogFieldConfigRequest.field)
}

// -------------------------------------------------------------------

// GetLogFieldConfigResponse

// required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
inline bool GetLogFieldConfigResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLogFieldConfigResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLogFieldConfigResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLogFieldConfigResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::manage::GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::status() const {
  // @@protoc_insertion_point(field_get:manage.GetLogFieldConfigResponse.status)
  return static_cast< ::manage::GetLogFieldConfigResponse_Res_Status >(status_);
}
inline void GetLogFieldConfigResponse::set_status(::manage::GetLogFieldConfigResponse_Res_Status value) {
  assert(::manage::GetLogFieldConfigResponse_Res_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogFieldConfigResponse.status)
}

// optional string error = 2;
inline bool GetLogFieldConfigResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLogFieldConfigResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLogFieldConfigResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLogFieldConfigResponse::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& GetLogFieldConfigResponse::error() const {
  // @@protoc_insertion_point(field_get:manage.GetLogFieldConfigResponse.error)
  return *error_;
}
inline void GetLogFieldConfigResponse::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:manage.GetLogFieldConfigResponse.error)
}
inline void GetLogFieldConfigResponse::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.GetLogFieldConfigResponse.error)
}
inline void GetLogFieldConfigResponse::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.GetLogFieldConfigResponse.error)
}
inline ::std::string* GetLogFieldConfigResponse::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.GetLogFieldConfigResponse.error)
  return error_;
}
inline ::std::string* GetLogFieldConfigResponse::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLogFieldConfigResponse::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.GetLogFieldConfigResponse.error)
}

// repeated .manage.FiledConfig fieldconfigs = 3;
inline int GetLogFieldConfigResponse::fieldconfigs_size() const {
  return fieldconfigs_.size();
}
inline void GetLogFieldConfigResponse::clear_fieldconfigs() {
  fieldconfigs_.Clear();
}
inline const ::manage::FiledConfig& GetLogFieldConfigResponse::fieldconfigs(int index) const {
  // @@protoc_insertion_point(field_get:manage.GetLogFieldConfigResponse.fieldconfigs)
  return fieldconfigs_.Get(index);
}
inline ::manage::FiledConfig* GetLogFieldConfigResponse::mutable_fieldconfigs(int index) {
  // @@protoc_insertion_point(field_mutable:manage.GetLogFieldConfigResponse.fieldconfigs)
  return fieldconfigs_.Mutable(index);
}
inline ::manage::FiledConfig* GetLogFieldConfigResponse::add_fieldconfigs() {
  // @@protoc_insertion_point(field_add:manage.GetLogFieldConfigResponse.fieldconfigs)
  return fieldconfigs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >&
GetLogFieldConfigResponse::fieldconfigs() const {
  // @@protoc_insertion_point(field_list:manage.GetLogFieldConfigResponse.fieldconfigs)
  return fieldconfigs_;
}
inline ::google::protobuf::RepeatedPtrField< ::manage::FiledConfig >*
GetLogFieldConfigResponse::mutable_fieldconfigs() {
  // @@protoc_insertion_point(field_mutable_list:manage.GetLogFieldConfigResponse.fieldconfigs)
  return &fieldconfigs_;
}

// -------------------------------------------------------------------

// GetLogTransmitStatRequest

// optional string application = 1;
inline bool GetLogTransmitStatRequest::has_application() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLogTransmitStatRequest::set_has_application() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLogTransmitStatRequest::clear_has_application() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLogTransmitStatRequest::clear_application() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_->clear();
  }
  clear_has_application();
}
inline const ::std::string& GetLogTransmitStatRequest::application() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatRequest.application)
  return *application_;
}
inline void GetLogTransmitStatRequest::set_application(const ::std::string& value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatRequest.application)
}
inline void GetLogTransmitStatRequest::set_application(const char* value) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.GetLogTransmitStatRequest.application)
}
inline void GetLogTransmitStatRequest::set_application(const char* value, size_t size) {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  application_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.GetLogTransmitStatRequest.application)
}
inline ::std::string* GetLogTransmitStatRequest::mutable_application() {
  set_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    application_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.GetLogTransmitStatRequest.application)
  return application_;
}
inline ::std::string* GetLogTransmitStatRequest::release_application() {
  clear_has_application();
  if (application_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = application_;
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLogTransmitStatRequest::set_allocated_application(::std::string* application) {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (application) {
    set_has_application();
    application_ = application;
  } else {
    clear_has_application();
    application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.GetLogTransmitStatRequest.application)
}

// optional bool logtype = 2;
inline bool GetLogTransmitStatRequest::has_logtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLogTransmitStatRequest::set_has_logtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLogTransmitStatRequest::clear_has_logtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLogTransmitStatRequest::clear_logtype() {
  logtype_ = false;
  clear_has_logtype();
}
inline bool GetLogTransmitStatRequest::logtype() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatRequest.logtype)
  return logtype_;
}
inline void GetLogTransmitStatRequest::set_logtype(bool value) {
  set_has_logtype();
  logtype_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatRequest.logtype)
}

// required int64 startime = 3;
inline bool GetLogTransmitStatRequest::has_startime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLogTransmitStatRequest::set_has_startime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLogTransmitStatRequest::clear_has_startime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLogTransmitStatRequest::clear_startime() {
  startime_ = GOOGLE_LONGLONG(0);
  clear_has_startime();
}
inline ::google::protobuf::int64 GetLogTransmitStatRequest::startime() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatRequest.startime)
  return startime_;
}
inline void GetLogTransmitStatRequest::set_startime(::google::protobuf::int64 value) {
  set_has_startime();
  startime_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatRequest.startime)
}

// required int64 endtime = 4;
inline bool GetLogTransmitStatRequest::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLogTransmitStatRequest::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLogTransmitStatRequest::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLogTransmitStatRequest::clear_endtime() {
  endtime_ = GOOGLE_LONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::int64 GetLogTransmitStatRequest::endtime() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatRequest.endtime)
  return endtime_;
}
inline void GetLogTransmitStatRequest::set_endtime(::google::protobuf::int64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatRequest.endtime)
}

// -------------------------------------------------------------------

// GetLogTransmitStatResponse

// required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
inline bool GetLogTransmitStatResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLogTransmitStatResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLogTransmitStatResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLogTransmitStatResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::manage::GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::status() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatResponse.status)
  return static_cast< ::manage::GetLogTransmitStatResponse_Res_Status >(status_);
}
inline void GetLogTransmitStatResponse::set_status(::manage::GetLogTransmitStatResponse_Res_Status value) {
  assert(::manage::GetLogTransmitStatResponse_Res_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatResponse.status)
}

// optional string error = 2;
inline bool GetLogTransmitStatResponse::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLogTransmitStatResponse::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLogTransmitStatResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLogTransmitStatResponse::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& GetLogTransmitStatResponse::error() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatResponse.error)
  return *error_;
}
inline void GetLogTransmitStatResponse::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatResponse.error)
}
inline void GetLogTransmitStatResponse::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:manage.GetLogTransmitStatResponse.error)
}
inline void GetLogTransmitStatResponse::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:manage.GetLogTransmitStatResponse.error)
}
inline ::std::string* GetLogTransmitStatResponse::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:manage.GetLogTransmitStatResponse.error)
  return error_;
}
inline ::std::string* GetLogTransmitStatResponse::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLogTransmitStatResponse::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:manage.GetLogTransmitStatResponse.error)
}

// required int64 num = 3;
inline bool GetLogTransmitStatResponse::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLogTransmitStatResponse::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLogTransmitStatResponse::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLogTransmitStatResponse::clear_num() {
  num_ = GOOGLE_LONGLONG(0);
  clear_has_num();
}
inline ::google::protobuf::int64 GetLogTransmitStatResponse::num() const {
  // @@protoc_insertion_point(field_get:manage.GetLogTransmitStatResponse.num)
  return num_;
}
inline void GetLogTransmitStatResponse::set_num(::google::protobuf::int64 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:manage.GetLogTransmitStatResponse.num)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace manage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::manage::SetLogFieldConfigResponse_Res_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::manage::SetLogFieldConfigResponse_Res_Status>() {
  return ::manage::SetLogFieldConfigResponse_Res_Status_descriptor();
}
template <> struct is_proto_enum< ::manage::GetLogFieldConfigResponse_Res_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::manage::GetLogFieldConfigResponse_Res_Status>() {
  return ::manage::GetLogFieldConfigResponse_Res_Status_descriptor();
}
template <> struct is_proto_enum< ::manage::GetLogTransmitStatResponse_Res_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::manage::GetLogTransmitStatResponse_Res_Status>() {
  return ::manage::GetLogTransmitStatResponse_Res_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_manage_2eproto__INCLUDED
