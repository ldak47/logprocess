// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace manage {

namespace {

const ::google::protobuf::Descriptor* FiledConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FiledConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLogFieldConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFieldConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLogFieldConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFieldConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetLogFieldConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetLogFieldConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFieldConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogFieldConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFieldConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetLogFieldConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetLogTransmitStatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogTransmitStatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogTransmitStatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogTransmitStatResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetLogTransmitStatResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* ManageService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_manage_2eproto() {
  protobuf_AddDesc_manage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "manage.proto");
  GOOGLE_CHECK(file != NULL);
  FiledConfig_descriptor_ = file->message_type(0);
  static const int FiledConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, regex_),
  };
  FiledConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FiledConfig_descriptor_,
      FiledConfig::default_instance_,
      FiledConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FiledConfig));
  SetLogFieldConfigRequest_descriptor_ = file->message_type(1);
  static const int SetLogFieldConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, fieldconfigs_),
  };
  SetLogFieldConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFieldConfigRequest_descriptor_,
      SetLogFieldConfigRequest::default_instance_,
      SetLogFieldConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFieldConfigRequest));
  SetLogFieldConfigResponse_descriptor_ = file->message_type(2);
  static const int SetLogFieldConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, error_),
  };
  SetLogFieldConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFieldConfigResponse_descriptor_,
      SetLogFieldConfigResponse::default_instance_,
      SetLogFieldConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFieldConfigResponse));
  SetLogFieldConfigResponse_Res_Status_descriptor_ = SetLogFieldConfigResponse_descriptor_->enum_type(0);
  GetLogFieldConfigRequest_descriptor_ = file->message_type(3);
  static const int GetLogFieldConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, field_),
  };
  GetLogFieldConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFieldConfigRequest_descriptor_,
      GetLogFieldConfigRequest::default_instance_,
      GetLogFieldConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFieldConfigRequest));
  GetLogFieldConfigResponse_descriptor_ = file->message_type(4);
  static const int GetLogFieldConfigResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, fieldconfigs_),
  };
  GetLogFieldConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFieldConfigResponse_descriptor_,
      GetLogFieldConfigResponse::default_instance_,
      GetLogFieldConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFieldConfigResponse));
  GetLogFieldConfigResponse_Res_Status_descriptor_ = GetLogFieldConfigResponse_descriptor_->enum_type(0);
  GetLogTransmitStatRequest_descriptor_ = file->message_type(5);
  static const int GetLogTransmitStatRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, logtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, startime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, endtime_),
  };
  GetLogTransmitStatRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogTransmitStatRequest_descriptor_,
      GetLogTransmitStatRequest::default_instance_,
      GetLogTransmitStatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogTransmitStatRequest));
  GetLogTransmitStatResponse_descriptor_ = file->message_type(6);
  static const int GetLogTransmitStatResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, num_),
  };
  GetLogTransmitStatResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogTransmitStatResponse_descriptor_,
      GetLogTransmitStatResponse::default_instance_,
      GetLogTransmitStatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogTransmitStatResponse));
  GetLogTransmitStatResponse_Res_Status_descriptor_ = GetLogTransmitStatResponse_descriptor_->enum_type(0);
  ManageService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_manage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FiledConfig_descriptor_, &FiledConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFieldConfigRequest_descriptor_, &SetLogFieldConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFieldConfigResponse_descriptor_, &SetLogFieldConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFieldConfigRequest_descriptor_, &GetLogFieldConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFieldConfigResponse_descriptor_, &GetLogFieldConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogTransmitStatRequest_descriptor_, &GetLogTransmitStatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogTransmitStatResponse_descriptor_, &GetLogTransmitStatResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_manage_2eproto() {
  delete FiledConfig::default_instance_;
  delete FiledConfig_reflection_;
  delete SetLogFieldConfigRequest::default_instance_;
  delete SetLogFieldConfigRequest_reflection_;
  delete SetLogFieldConfigResponse::default_instance_;
  delete SetLogFieldConfigResponse_reflection_;
  delete GetLogFieldConfigRequest::default_instance_;
  delete GetLogFieldConfigRequest_reflection_;
  delete GetLogFieldConfigResponse::default_instance_;
  delete GetLogFieldConfigResponse_reflection_;
  delete GetLogTransmitStatRequest::default_instance_;
  delete GetLogTransmitStatRequest_reflection_;
  delete GetLogTransmitStatResponse::default_instance_;
  delete GetLogTransmitStatResponse_reflection_;
}

void protobuf_AddDesc_manage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014manage.proto\022\006manage\"+\n\013FiledConfig\022\r\n"
    "\005field\030\001 \002(\t\022\r\n\005regex\030\002 \002(\t\"Z\n\030SetLogFie"
    "ldConfigRequest\022\023\n\013application\030\001 \002(\t\022)\n\014"
    "fieldconfigs\030\002 \003(\0132\023.manage.FiledConfig\""
    "\217\001\n\031SetLogFieldConfigResponse\022<\n\006status\030"
    "\001 \002(\0162,.manage.SetLogFieldConfigResponse"
    ".Res_Status\022\r\n\005error\030\002 \001(\t\"%\n\nRes_Status"
    "\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020\001\">\n\030GetLogField"
    "ConfigRequest\022\023\n\013application\030\001 \001(\t\022\r\n\005fi"
    "eld\030\002 \001(\t\"\272\001\n\031GetLogFieldConfigResponse\022"
    "<\n\006status\030\001 \002(\0162,.manage.GetLogFieldConf"
    "igResponse.Res_Status\022\r\n\005error\030\002 \001(\t\022)\n\014"
    "fieldconfigs\030\003 \003(\0132\023.manage.FiledConfig\""
    "%\n\nRes_Status\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020\001\"d"
    "\n\031GetLogTransmitStatRequest\022\023\n\013applicati"
    "on\030\001 \001(\t\022\017\n\007logtype\030\002 \001(\010\022\020\n\010startime\030\003 "
    "\002(\003\022\017\n\007endtime\030\004 \002(\003\"\236\001\n\032GetLogTransmitS"
    "tatResponse\022=\n\006status\030\001 \002(\0162-.manage.Get"
    "LogTransmitStatResponse.Res_Status\022\r\n\005er"
    "ror\030\002 \001(\t\022\013\n\003num\030\003 \002(\003\"%\n\nRes_Status\022\013\n\007"
    "SUCCEED\020\000\022\n\n\006FAILED\020\0012\240\002\n\rManageService\022"
    "X\n\021SetLogFieldConfig\022 .manage.SetLogFiel"
    "dConfigRequest\032!.manage.SetLogFieldConfi"
    "gResponse\022X\n\021GetLogFieldConfig\022 .manage."
    "GetLogFieldConfigRequest\032!.manage.GetLog"
    "FieldConfigResponse\022[\n\022GetLogTransmitSta"
    "t\022!.manage.GetLogTransmitStatRequest\032\".m"
    "anage.GetLogTransmitStatResponseB\003\200\001\001", 1117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manage.proto", &protobuf_RegisterTypes);
  FiledConfig::default_instance_ = new FiledConfig();
  SetLogFieldConfigRequest::default_instance_ = new SetLogFieldConfigRequest();
  SetLogFieldConfigResponse::default_instance_ = new SetLogFieldConfigResponse();
  GetLogFieldConfigRequest::default_instance_ = new GetLogFieldConfigRequest();
  GetLogFieldConfigResponse::default_instance_ = new GetLogFieldConfigResponse();
  GetLogTransmitStatRequest::default_instance_ = new GetLogTransmitStatRequest();
  GetLogTransmitStatResponse::default_instance_ = new GetLogTransmitStatResponse();
  FiledConfig::default_instance_->InitAsDefaultInstance();
  SetLogFieldConfigRequest::default_instance_->InitAsDefaultInstance();
  SetLogFieldConfigResponse::default_instance_->InitAsDefaultInstance();
  GetLogFieldConfigRequest::default_instance_->InitAsDefaultInstance();
  GetLogFieldConfigResponse::default_instance_->InitAsDefaultInstance();
  GetLogTransmitStatRequest::default_instance_->InitAsDefaultInstance();
  GetLogTransmitStatResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_manage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_manage_2eproto {
  StaticDescriptorInitializer_manage_2eproto() {
    protobuf_AddDesc_manage_2eproto();
  }
} static_descriptor_initializer_manage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int FiledConfig::kFieldFieldNumber;
const int FiledConfig::kRegexFieldNumber;
#endif  // !_MSC_VER

FiledConfig::FiledConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.FiledConfig)
}

void FiledConfig::InitAsDefaultInstance() {
}

FiledConfig::FiledConfig(const FiledConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.FiledConfig)
}

void FiledConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FiledConfig::~FiledConfig() {
  // @@protoc_insertion_point(destructor:manage.FiledConfig)
  SharedDtor();
}

void FiledConfig::SharedDtor() {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regex_;
  }
  if (this != default_instance_) {
  }
}

void FiledConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FiledConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FiledConfig_descriptor_;
}

const FiledConfig& FiledConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

FiledConfig* FiledConfig::default_instance_ = NULL;

FiledConfig* FiledConfig::New() const {
  return new FiledConfig;
}

void FiledConfig::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field_->clear();
      }
    }
    if (has_regex()) {
      if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        regex_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FiledConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.FiledConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_regex;
        break;
      }

      // required string regex = 2;
      case 2: {
        if (tag == 18) {
         parse_regex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regex().data(), this->regex().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "regex");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.FiledConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.FiledConfig)
  return false;
#undef DO_
}

void FiledConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.FiledConfig)
  // required string field = 1;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // required string regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.FiledConfig)
}

::google::protobuf::uint8* FiledConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.FiledConfig)
  // required string field = 1;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // required string regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.FiledConfig)
  return target;
}

int FiledConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string field = 1;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

    // required string regex = 2;
    if (has_regex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regex());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FiledConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FiledConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FiledConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FiledConfig::MergeFrom(const FiledConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field()) {
      set_field(from.field());
    }
    if (from.has_regex()) {
      set_regex(from.regex());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FiledConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FiledConfig::CopyFrom(const FiledConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FiledConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FiledConfig::Swap(FiledConfig* other) {
  if (other != this) {
    std::swap(field_, other->field_);
    std::swap(regex_, other->regex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FiledConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FiledConfig_descriptor_;
  metadata.reflection = FiledConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetLogFieldConfigRequest::kApplicationFieldNumber;
const int SetLogFieldConfigRequest::kFieldconfigsFieldNumber;
#endif  // !_MSC_VER

SetLogFieldConfigRequest::SetLogFieldConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFieldConfigRequest)
}

void SetLogFieldConfigRequest::InitAsDefaultInstance() {
}

SetLogFieldConfigRequest::SetLogFieldConfigRequest(const SetLogFieldConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFieldConfigRequest)
}

void SetLogFieldConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFieldConfigRequest::~SetLogFieldConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.SetLogFieldConfigRequest)
  SharedDtor();
}

void SetLogFieldConfigRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (this != default_instance_) {
  }
}

void SetLogFieldConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFieldConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigRequest_descriptor_;
}

const SetLogFieldConfigRequest& SetLogFieldConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFieldConfigRequest* SetLogFieldConfigRequest::default_instance_ = NULL;

SetLogFieldConfigRequest* SetLogFieldConfigRequest::New() const {
  return new SetLogFieldConfigRequest;
}

void SetLogFieldConfigRequest::Clear() {
  if (has_application()) {
    if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      application_->clear();
    }
  }
  fieldconfigs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFieldConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFieldConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fieldconfigs;
        break;
      }

      // repeated .manage.FiledConfig fieldconfigs = 2;
      case 2: {
        if (tag == 18) {
         parse_fieldconfigs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fieldconfigs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fieldconfigs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFieldConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFieldConfigRequest)
  return false;
#undef DO_
}

void SetLogFieldConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFieldConfigRequest)
  // required string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // repeated .manage.FiledConfig fieldconfigs = 2;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fieldconfigs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFieldConfigRequest)
}

::google::protobuf::uint8* SetLogFieldConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFieldConfigRequest)
  // required string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // repeated .manage.FiledConfig fieldconfigs = 2;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fieldconfigs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFieldConfigRequest)
  return target;
}

int SetLogFieldConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

  }
  // repeated .manage.FiledConfig fieldconfigs = 2;
  total_size += 1 * this->fieldconfigs_size();
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fieldconfigs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFieldConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFieldConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFieldConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFieldConfigRequest::MergeFrom(const SetLogFieldConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  fieldconfigs_.MergeFrom(from.fieldconfigs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFieldConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFieldConfigRequest::CopyFrom(const SetLogFieldConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFieldConfigRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->fieldconfigs())) return false;
  return true;
}

void SetLogFieldConfigRequest::Swap(SetLogFieldConfigRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    fieldconfigs_.Swap(&other->fieldconfigs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFieldConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFieldConfigRequest_descriptor_;
  metadata.reflection = SetLogFieldConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetLogFieldConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigResponse_Res_Status_descriptor_;
}
bool SetLogFieldConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::SUCCEED;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::FAILED;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::Res_Status_MIN;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::Res_Status_MAX;
const int SetLogFieldConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetLogFieldConfigResponse::kStatusFieldNumber;
const int SetLogFieldConfigResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

SetLogFieldConfigResponse::SetLogFieldConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFieldConfigResponse)
}

void SetLogFieldConfigResponse::InitAsDefaultInstance() {
}

SetLogFieldConfigResponse::SetLogFieldConfigResponse(const SetLogFieldConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFieldConfigResponse)
}

void SetLogFieldConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFieldConfigResponse::~SetLogFieldConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.SetLogFieldConfigResponse)
  SharedDtor();
}

void SetLogFieldConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void SetLogFieldConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFieldConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigResponse_descriptor_;
}

const SetLogFieldConfigResponse& SetLogFieldConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFieldConfigResponse* SetLogFieldConfigResponse::default_instance_ = NULL;

SetLogFieldConfigResponse* SetLogFieldConfigResponse::New() const {
  return new SetLogFieldConfigResponse;
}

void SetLogFieldConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFieldConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFieldConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::SetLogFieldConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::SetLogFieldConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFieldConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFieldConfigResponse)
  return false;
#undef DO_
}

void SetLogFieldConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFieldConfigResponse)
  // required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFieldConfigResponse)
}

::google::protobuf::uint8* SetLogFieldConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFieldConfigResponse)
  // required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFieldConfigResponse)
  return target;
}

int SetLogFieldConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.SetLogFieldConfigResponse.Res_Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFieldConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFieldConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFieldConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFieldConfigResponse::MergeFrom(const SetLogFieldConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFieldConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFieldConfigResponse::CopyFrom(const SetLogFieldConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFieldConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetLogFieldConfigResponse::Swap(SetLogFieldConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFieldConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFieldConfigResponse_descriptor_;
  metadata.reflection = SetLogFieldConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLogFieldConfigRequest::kApplicationFieldNumber;
const int GetLogFieldConfigRequest::kFieldFieldNumber;
#endif  // !_MSC_VER

GetLogFieldConfigRequest::GetLogFieldConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFieldConfigRequest)
}

void GetLogFieldConfigRequest::InitAsDefaultInstance() {
}

GetLogFieldConfigRequest::GetLogFieldConfigRequest(const GetLogFieldConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFieldConfigRequest)
}

void GetLogFieldConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFieldConfigRequest::~GetLogFieldConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.GetLogFieldConfigRequest)
  SharedDtor();
}

void GetLogFieldConfigRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (this != default_instance_) {
  }
}

void GetLogFieldConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFieldConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigRequest_descriptor_;
}

const GetLogFieldConfigRequest& GetLogFieldConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFieldConfigRequest* GetLogFieldConfigRequest::default_instance_ = NULL;

GetLogFieldConfigRequest* GetLogFieldConfigRequest::New() const {
  return new GetLogFieldConfigRequest;
}

void GetLogFieldConfigRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFieldConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFieldConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field;
        break;
      }

      // optional string field = 2;
      case 2: {
        if (tag == 18) {
         parse_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFieldConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFieldConfigRequest)
  return false;
#undef DO_
}

void GetLogFieldConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFieldConfigRequest)
  // optional string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // optional string field = 2;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFieldConfigRequest)
}

::google::protobuf::uint8* GetLogFieldConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFieldConfigRequest)
  // optional string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // optional string field = 2;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFieldConfigRequest)
  return target;
}

int GetLogFieldConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // optional string field = 2;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFieldConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFieldConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFieldConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFieldConfigRequest::MergeFrom(const GetLogFieldConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_field()) {
      set_field(from.field());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFieldConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFieldConfigRequest::CopyFrom(const GetLogFieldConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFieldConfigRequest::IsInitialized() const {

  return true;
}

void GetLogFieldConfigRequest::Swap(GetLogFieldConfigRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(field_, other->field_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFieldConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFieldConfigRequest_descriptor_;
  metadata.reflection = GetLogFieldConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetLogFieldConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigResponse_Res_Status_descriptor_;
}
bool GetLogFieldConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::SUCCEED;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::FAILED;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::Res_Status_MIN;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::Res_Status_MAX;
const int GetLogFieldConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GetLogFieldConfigResponse::kStatusFieldNumber;
const int GetLogFieldConfigResponse::kErrorFieldNumber;
const int GetLogFieldConfigResponse::kFieldconfigsFieldNumber;
#endif  // !_MSC_VER

GetLogFieldConfigResponse::GetLogFieldConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFieldConfigResponse)
}

void GetLogFieldConfigResponse::InitAsDefaultInstance() {
}

GetLogFieldConfigResponse::GetLogFieldConfigResponse(const GetLogFieldConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFieldConfigResponse)
}

void GetLogFieldConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFieldConfigResponse::~GetLogFieldConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.GetLogFieldConfigResponse)
  SharedDtor();
}

void GetLogFieldConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void GetLogFieldConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFieldConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigResponse_descriptor_;
}

const GetLogFieldConfigResponse& GetLogFieldConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFieldConfigResponse* GetLogFieldConfigResponse::default_instance_ = NULL;

GetLogFieldConfigResponse* GetLogFieldConfigResponse::New() const {
  return new GetLogFieldConfigResponse;
}

void GetLogFieldConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  fieldconfigs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFieldConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFieldConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::GetLogFieldConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::GetLogFieldConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldconfigs;
        break;
      }

      // repeated .manage.FiledConfig fieldconfigs = 3;
      case 3: {
        if (tag == 26) {
         parse_fieldconfigs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fieldconfigs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldconfigs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFieldConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFieldConfigResponse)
  return false;
#undef DO_
}

void GetLogFieldConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFieldConfigResponse)
  // required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // repeated .manage.FiledConfig fieldconfigs = 3;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fieldconfigs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFieldConfigResponse)
}

::google::protobuf::uint8* GetLogFieldConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFieldConfigResponse)
  // required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // repeated .manage.FiledConfig fieldconfigs = 3;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fieldconfigs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFieldConfigResponse)
  return target;
}

int GetLogFieldConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.GetLogFieldConfigResponse.Res_Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  // repeated .manage.FiledConfig fieldconfigs = 3;
  total_size += 1 * this->fieldconfigs_size();
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fieldconfigs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFieldConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFieldConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFieldConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFieldConfigResponse::MergeFrom(const GetLogFieldConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  fieldconfigs_.MergeFrom(from.fieldconfigs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFieldConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFieldConfigResponse::CopyFrom(const GetLogFieldConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFieldConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->fieldconfigs())) return false;
  return true;
}

void GetLogFieldConfigResponse::Swap(GetLogFieldConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    fieldconfigs_.Swap(&other->fieldconfigs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFieldConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFieldConfigResponse_descriptor_;
  metadata.reflection = GetLogFieldConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLogTransmitStatRequest::kApplicationFieldNumber;
const int GetLogTransmitStatRequest::kLogtypeFieldNumber;
const int GetLogTransmitStatRequest::kStartimeFieldNumber;
const int GetLogTransmitStatRequest::kEndtimeFieldNumber;
#endif  // !_MSC_VER

GetLogTransmitStatRequest::GetLogTransmitStatRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogTransmitStatRequest)
}

void GetLogTransmitStatRequest::InitAsDefaultInstance() {
}

GetLogTransmitStatRequest::GetLogTransmitStatRequest(const GetLogTransmitStatRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogTransmitStatRequest)
}

void GetLogTransmitStatRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logtype_ = false;
  startime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogTransmitStatRequest::~GetLogTransmitStatRequest() {
  // @@protoc_insertion_point(destructor:manage.GetLogTransmitStatRequest)
  SharedDtor();
}

void GetLogTransmitStatRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (this != default_instance_) {
  }
}

void GetLogTransmitStatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogTransmitStatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatRequest_descriptor_;
}

const GetLogTransmitStatRequest& GetLogTransmitStatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogTransmitStatRequest* GetLogTransmitStatRequest::default_instance_ = NULL;

GetLogTransmitStatRequest* GetLogTransmitStatRequest::New() const {
  return new GetLogTransmitStatRequest;
}

void GetLogTransmitStatRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetLogTransmitStatRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(startime_, logtype_);
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogTransmitStatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogTransmitStatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_logtype;
        break;
      }

      // optional bool logtype = 2;
      case 2: {
        if (tag == 16) {
         parse_logtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &logtype_)));
          set_has_logtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_startime;
        break;
      }

      // required int64 startime = 3;
      case 3: {
        if (tag == 24) {
         parse_startime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &startime_)));
          set_has_startime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_endtime;
        break;
      }

      // required int64 endtime = 4;
      case 4: {
        if (tag == 32) {
         parse_endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogTransmitStatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogTransmitStatRequest)
  return false;
#undef DO_
}

void GetLogTransmitStatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogTransmitStatRequest)
  // optional string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // optional bool logtype = 2;
  if (has_logtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->logtype(), output);
  }

  // required int64 startime = 3;
  if (has_startime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->startime(), output);
  }

  // required int64 endtime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogTransmitStatRequest)
}

::google::protobuf::uint8* GetLogTransmitStatRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogTransmitStatRequest)
  // optional string application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // optional bool logtype = 2;
  if (has_logtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->logtype(), target);
  }

  // required int64 startime = 3;
  if (has_startime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->startime(), target);
  }

  // required int64 endtime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogTransmitStatRequest)
  return target;
}

int GetLogTransmitStatRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // optional bool logtype = 2;
    if (has_logtype()) {
      total_size += 1 + 1;
    }

    // required int64 startime = 3;
    if (has_startime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->startime());
    }

    // required int64 endtime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogTransmitStatRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogTransmitStatRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogTransmitStatRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogTransmitStatRequest::MergeFrom(const GetLogTransmitStatRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_logtype()) {
      set_logtype(from.logtype());
    }
    if (from.has_startime()) {
      set_startime(from.startime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogTransmitStatRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogTransmitStatRequest::CopyFrom(const GetLogTransmitStatRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogTransmitStatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  return true;
}

void GetLogTransmitStatRequest::Swap(GetLogTransmitStatRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(logtype_, other->logtype_);
    std::swap(startime_, other->startime_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogTransmitStatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogTransmitStatRequest_descriptor_;
  metadata.reflection = GetLogTransmitStatRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetLogTransmitStatResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatResponse_Res_Status_descriptor_;
}
bool GetLogTransmitStatResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::SUCCEED;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::FAILED;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::Res_Status_MIN;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::Res_Status_MAX;
const int GetLogTransmitStatResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GetLogTransmitStatResponse::kStatusFieldNumber;
const int GetLogTransmitStatResponse::kErrorFieldNumber;
const int GetLogTransmitStatResponse::kNumFieldNumber;
#endif  // !_MSC_VER

GetLogTransmitStatResponse::GetLogTransmitStatResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogTransmitStatResponse)
}

void GetLogTransmitStatResponse::InitAsDefaultInstance() {
}

GetLogTransmitStatResponse::GetLogTransmitStatResponse(const GetLogTransmitStatResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogTransmitStatResponse)
}

void GetLogTransmitStatResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  num_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogTransmitStatResponse::~GetLogTransmitStatResponse() {
  // @@protoc_insertion_point(destructor:manage.GetLogTransmitStatResponse)
  SharedDtor();
}

void GetLogTransmitStatResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void GetLogTransmitStatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogTransmitStatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatResponse_descriptor_;
}

const GetLogTransmitStatResponse& GetLogTransmitStatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogTransmitStatResponse* GetLogTransmitStatResponse::default_instance_ = NULL;

GetLogTransmitStatResponse* GetLogTransmitStatResponse::New() const {
  return new GetLogTransmitStatResponse;
}

void GetLogTransmitStatResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetLogTransmitStatResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(num_, status_);
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogTransmitStatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogTransmitStatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::GetLogTransmitStatResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::GetLogTransmitStatResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // required int64 num = 3;
      case 3: {
        if (tag == 24) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogTransmitStatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogTransmitStatResponse)
  return false;
#undef DO_
}

void GetLogTransmitStatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogTransmitStatResponse)
  // required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // required int64 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogTransmitStatResponse)
}

::google::protobuf::uint8* GetLogTransmitStatResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogTransmitStatResponse)
  // required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // required int64 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogTransmitStatResponse)
  return target;
}

int GetLogTransmitStatResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.GetLogTransmitStatResponse.Res_Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // required int64 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogTransmitStatResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogTransmitStatResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogTransmitStatResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogTransmitStatResponse::MergeFrom(const GetLogTransmitStatResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogTransmitStatResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogTransmitStatResponse::CopyFrom(const GetLogTransmitStatResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogTransmitStatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void GetLogTransmitStatResponse::Swap(GetLogTransmitStatResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogTransmitStatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogTransmitStatResponse_descriptor_;
  metadata.reflection = GetLogTransmitStatResponse_reflection_;
  return metadata;
}


// ===================================================================

ManageService::~ManageService() {}

const ::google::protobuf::ServiceDescriptor* ManageService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManageService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* ManageService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManageService_descriptor_;
}

void ManageService::SetLogFieldConfig(::google::protobuf::RpcController* controller,
                         const ::manage::SetLogFieldConfigRequest*,
                         ::manage::SetLogFieldConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetLogFieldConfig() not implemented.");
  done->Run();
}

void ManageService::GetLogFieldConfig(::google::protobuf::RpcController* controller,
                         const ::manage::GetLogFieldConfigRequest*,
                         ::manage::GetLogFieldConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLogFieldConfig() not implemented.");
  done->Run();
}

void ManageService::GetLogTransmitStat(::google::protobuf::RpcController* controller,
                         const ::manage::GetLogTransmitStatRequest*,
                         ::manage::GetLogTransmitStatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLogTransmitStat() not implemented.");
  done->Run();
}

void ManageService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), ManageService_descriptor_);
  switch(method->index()) {
    case 0:
      SetLogFieldConfig(controller,
             ::google::protobuf::down_cast<const ::manage::SetLogFieldConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::SetLogFieldConfigResponse*>(response),
             done);
      break;
    case 1:
      GetLogFieldConfig(controller,
             ::google::protobuf::down_cast<const ::manage::GetLogFieldConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::GetLogFieldConfigResponse*>(response),
             done);
      break;
    case 2:
      GetLogTransmitStat(controller,
             ::google::protobuf::down_cast<const ::manage::GetLogTransmitStatRequest*>(request),
             ::google::protobuf::down_cast< ::manage::GetLogTransmitStatResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ManageService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::manage::SetLogFieldConfigRequest::default_instance();
    case 1:
      return ::manage::GetLogFieldConfigRequest::default_instance();
    case 2:
      return ::manage::GetLogTransmitStatRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& ManageService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::manage::SetLogFieldConfigResponse::default_instance();
    case 1:
      return ::manage::GetLogFieldConfigResponse::default_instance();
    case 2:
      return ::manage::GetLogTransmitStatResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

ManageService_Stub::ManageService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ManageService_Stub::ManageService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ManageService_Stub::~ManageService_Stub() {
  if (owns_channel_) delete channel_;
}

void ManageService_Stub::SetLogFieldConfig(::google::protobuf::RpcController* controller,
                              const ::manage::SetLogFieldConfigRequest* request,
                              ::manage::SetLogFieldConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ManageService_Stub::GetLogFieldConfig(::google::protobuf::RpcController* controller,
                              const ::manage::GetLogFieldConfigRequest* request,
                              ::manage::GetLogFieldConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ManageService_Stub::GetLogTransmitStat(::google::protobuf::RpcController* controller,
                              const ::manage::GetLogTransmitStatRequest* request,
                              ::manage::GetLogTransmitStatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace manage

// @@protoc_insertion_point(global_scope)
