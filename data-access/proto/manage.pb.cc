// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace manage {

namespace {

const ::google::protobuf::Descriptor* MapEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* FiledConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FiledConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLogFieldConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFieldConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLogFieldConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFieldConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetLogFieldConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetLogFieldConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFieldConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogFieldConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFieldConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetLogFieldConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetLogTransmitStatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogTransmitStatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogTransmitStatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogTransmitStatResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetLogTransmitStatResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AddLogTransmitStatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddLogTransmitStatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddLogTransmitStatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddLogTransmitStatResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AddLogTransmitStatResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SetLogFilterConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFilterConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLogFilterConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLogFilterConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetLogFilterConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GetLogFilterConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFilterConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLogFilterConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLogFilterConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetLogFilterConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PullSwitchConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PullSwitchConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PullSwitchConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PullSwitchConfigResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PullSwitchConfigResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RetransmitRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetransmitRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RetransmitResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RetransmitResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RetransmitResponse_Res_Status_descriptor_ = NULL;
const ::google::protobuf::ServiceDescriptor* ManageService_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_manage_2eproto() {
  protobuf_AddDesc_manage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "manage.proto");
  GOOGLE_CHECK(file != NULL);
  MapEntry_descriptor_ = file->message_type(0);
  static const int MapEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapEntry, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapEntry, value_),
  };
  MapEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapEntry_descriptor_,
      MapEntry::default_instance_,
      MapEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapEntry));
  FiledConfig_descriptor_ = file->message_type(1);
  static const int FiledConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, regex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, istrans_),
  };
  FiledConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FiledConfig_descriptor_,
      FiledConfig::default_instance_,
      FiledConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FiledConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FiledConfig));
  SetLogFieldConfigRequest_descriptor_ = file->message_type(2);
  static const int SetLogFieldConfigRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, fieldconfigs_),
  };
  SetLogFieldConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFieldConfigRequest_descriptor_,
      SetLogFieldConfigRequest::default_instance_,
      SetLogFieldConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFieldConfigRequest));
  SetLogFieldConfigResponse_descriptor_ = file->message_type(3);
  static const int SetLogFieldConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, error_),
  };
  SetLogFieldConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFieldConfigResponse_descriptor_,
      SetLogFieldConfigResponse::default_instance_,
      SetLogFieldConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFieldConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFieldConfigResponse));
  SetLogFieldConfigResponse_Res_Status_descriptor_ = SetLogFieldConfigResponse_descriptor_->enum_type(0);
  GetLogFieldConfigRequest_descriptor_ = file->message_type(4);
  static const int GetLogFieldConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, field_),
  };
  GetLogFieldConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFieldConfigRequest_descriptor_,
      GetLogFieldConfigRequest::default_instance_,
      GetLogFieldConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFieldConfigRequest));
  GetLogFieldConfigResponse_descriptor_ = file->message_type(5);
  static const int GetLogFieldConfigResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, fieldconfigs_),
  };
  GetLogFieldConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFieldConfigResponse_descriptor_,
      GetLogFieldConfigResponse::default_instance_,
      GetLogFieldConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFieldConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFieldConfigResponse));
  GetLogFieldConfigResponse_Res_Status_descriptor_ = GetLogFieldConfigResponse_descriptor_->enum_type(0);
  GetLogTransmitStatRequest_descriptor_ = file->message_type(6);
  static const int GetLogTransmitStatRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, logtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, startime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, endtime_),
  };
  GetLogTransmitStatRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogTransmitStatRequest_descriptor_,
      GetLogTransmitStatRequest::default_instance_,
      GetLogTransmitStatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogTransmitStatRequest));
  GetLogTransmitStatResponse_descriptor_ = file->message_type(7);
  static const int GetLogTransmitStatResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, cnt_),
  };
  GetLogTransmitStatResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogTransmitStatResponse_descriptor_,
      GetLogTransmitStatResponse::default_instance_,
      GetLogTransmitStatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogTransmitStatResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogTransmitStatResponse));
  GetLogTransmitStatResponse_Res_Status_descriptor_ = GetLogTransmitStatResponse_descriptor_->enum_type(0);
  AddLogTransmitStatRequest_descriptor_ = file->message_type(8);
  static const int AddLogTransmitStatRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatRequest, application_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatRequest, srcid_),
  };
  AddLogTransmitStatRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddLogTransmitStatRequest_descriptor_,
      AddLogTransmitStatRequest::default_instance_,
      AddLogTransmitStatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddLogTransmitStatRequest));
  AddLogTransmitStatResponse_descriptor_ = file->message_type(9);
  static const int AddLogTransmitStatResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatResponse, error_),
  };
  AddLogTransmitStatResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddLogTransmitStatResponse_descriptor_,
      AddLogTransmitStatResponse::default_instance_,
      AddLogTransmitStatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddLogTransmitStatResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddLogTransmitStatResponse));
  AddLogTransmitStatResponse_Res_Status_descriptor_ = AddLogTransmitStatResponse_descriptor_->enum_type(0);
  SetLogFilterConfigRequest_descriptor_ = file->message_type(10);
  static const int SetLogFilterConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigRequest, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigRequest, srcid_),
  };
  SetLogFilterConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFilterConfigRequest_descriptor_,
      SetLogFilterConfigRequest::default_instance_,
      SetLogFilterConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFilterConfigRequest));
  SetLogFilterConfigResponse_descriptor_ = file->message_type(11);
  static const int SetLogFilterConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigResponse, error_),
  };
  SetLogFilterConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLogFilterConfigResponse_descriptor_,
      SetLogFilterConfigResponse::default_instance_,
      SetLogFilterConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLogFilterConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLogFilterConfigResponse));
  SetLogFilterConfigResponse_Res_Status_descriptor_ = SetLogFilterConfigResponse_descriptor_->enum_type(0);
  GetLogFilterConfigRequest_descriptor_ = file->message_type(12);
  static const int GetLogFilterConfigRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigRequest, application_),
  };
  GetLogFilterConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFilterConfigRequest_descriptor_,
      GetLogFilterConfigRequest::default_instance_,
      GetLogFilterConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFilterConfigRequest));
  GetLogFilterConfigResponse_descriptor_ = file->message_type(13);
  static const int GetLogFilterConfigResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigResponse, srcids_),
  };
  GetLogFilterConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLogFilterConfigResponse_descriptor_,
      GetLogFilterConfigResponse::default_instance_,
      GetLogFilterConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLogFilterConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLogFilterConfigResponse));
  GetLogFilterConfigResponse_Res_Status_descriptor_ = GetLogFilterConfigResponse_descriptor_->enum_type(0);
  PullSwitchConfigRequest_descriptor_ = file->message_type(14);
  static const int PullSwitchConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigRequest, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigRequest, idx_),
  };
  PullSwitchConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PullSwitchConfigRequest_descriptor_,
      PullSwitchConfigRequest::default_instance_,
      PullSwitchConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PullSwitchConfigRequest));
  PullSwitchConfigResponse_descriptor_ = file->message_type(15);
  static const int PullSwitchConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigResponse, error_),
  };
  PullSwitchConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PullSwitchConfigResponse_descriptor_,
      PullSwitchConfigResponse::default_instance_,
      PullSwitchConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullSwitchConfigResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PullSwitchConfigResponse));
  PullSwitchConfigResponse_Res_Status_descriptor_ = PullSwitchConfigResponse_descriptor_->enum_type(0);
  RetransmitRequest_descriptor_ = file->message_type(16);
  static const int RetransmitRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitRequest, package_),
  };
  RetransmitRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetransmitRequest_descriptor_,
      RetransmitRequest::default_instance_,
      RetransmitRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetransmitRequest));
  RetransmitResponse_descriptor_ = file->message_type(17);
  static const int RetransmitResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitResponse, error_),
  };
  RetransmitResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RetransmitResponse_descriptor_,
      RetransmitResponse::default_instance_,
      RetransmitResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RetransmitResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RetransmitResponse));
  RetransmitResponse_Res_Status_descriptor_ = RetransmitResponse_descriptor_->enum_type(0);
  ManageService_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_manage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapEntry_descriptor_, &MapEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FiledConfig_descriptor_, &FiledConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFieldConfigRequest_descriptor_, &SetLogFieldConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFieldConfigResponse_descriptor_, &SetLogFieldConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFieldConfigRequest_descriptor_, &GetLogFieldConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFieldConfigResponse_descriptor_, &GetLogFieldConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogTransmitStatRequest_descriptor_, &GetLogTransmitStatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogTransmitStatResponse_descriptor_, &GetLogTransmitStatResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddLogTransmitStatRequest_descriptor_, &AddLogTransmitStatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddLogTransmitStatResponse_descriptor_, &AddLogTransmitStatResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFilterConfigRequest_descriptor_, &SetLogFilterConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLogFilterConfigResponse_descriptor_, &SetLogFilterConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFilterConfigRequest_descriptor_, &GetLogFilterConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLogFilterConfigResponse_descriptor_, &GetLogFilterConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PullSwitchConfigRequest_descriptor_, &PullSwitchConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PullSwitchConfigResponse_descriptor_, &PullSwitchConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetransmitRequest_descriptor_, &RetransmitRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RetransmitResponse_descriptor_, &RetransmitResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_manage_2eproto() {
  delete MapEntry::default_instance_;
  delete MapEntry_reflection_;
  delete FiledConfig::default_instance_;
  delete FiledConfig_reflection_;
  delete SetLogFieldConfigRequest::default_instance_;
  delete SetLogFieldConfigRequest_reflection_;
  delete SetLogFieldConfigResponse::default_instance_;
  delete SetLogFieldConfigResponse_reflection_;
  delete GetLogFieldConfigRequest::default_instance_;
  delete GetLogFieldConfigRequest_reflection_;
  delete GetLogFieldConfigResponse::default_instance_;
  delete GetLogFieldConfigResponse_reflection_;
  delete GetLogTransmitStatRequest::default_instance_;
  delete GetLogTransmitStatRequest_reflection_;
  delete GetLogTransmitStatResponse::default_instance_;
  delete GetLogTransmitStatResponse_reflection_;
  delete AddLogTransmitStatRequest::default_instance_;
  delete AddLogTransmitStatRequest_reflection_;
  delete AddLogTransmitStatResponse::default_instance_;
  delete AddLogTransmitStatResponse_reflection_;
  delete SetLogFilterConfigRequest::default_instance_;
  delete SetLogFilterConfigRequest_reflection_;
  delete SetLogFilterConfigResponse::default_instance_;
  delete SetLogFilterConfigResponse_reflection_;
  delete GetLogFilterConfigRequest::default_instance_;
  delete GetLogFilterConfigRequest_reflection_;
  delete GetLogFilterConfigResponse::default_instance_;
  delete GetLogFilterConfigResponse_reflection_;
  delete PullSwitchConfigRequest::default_instance_;
  delete PullSwitchConfigRequest_reflection_;
  delete PullSwitchConfigResponse::default_instance_;
  delete PullSwitchConfigResponse_reflection_;
  delete RetransmitRequest::default_instance_;
  delete RetransmitRequest_reflection_;
  delete RetransmitResponse::default_instance_;
  delete RetransmitResponse_reflection_;
}

void protobuf_AddDesc_manage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014manage.proto\022\006manage\"&\n\010MapEntry\022\013\n\003Ke"
    "y\030\001 \002(\t\022\r\n\005Value\030\002 \002(\t\"<\n\013FiledConfig\022\r\n"
    "\005Field\030\001 \002(\t\022\r\n\005Regex\030\002 \002(\t\022\017\n\007Istrans\030\003"
    " \002(\010\"f\n\030SetLogFieldConfigRequest\022\023\n\013Appl"
    "ication\030\001 \002(\t\022\n\n\002Op\030\002 \002(\010\022)\n\014Fieldconfig"
    "s\030\003 \001(\0132\023.manage.FiledConfig\"\217\001\n\031SetLogF"
    "ieldConfigResponse\022<\n\006Status\030\001 \002(\0162,.man"
    "age.SetLogFieldConfigResponse.Res_Status"
    "\022\r\n\005Error\030\002 \001(\t\"%\n\nRes_Status\022\013\n\007SUCCEED"
    "\020\000\022\n\n\006FAILED\020\001\">\n\030GetLogFieldConfigReque"
    "st\022\023\n\013Application\030\001 \002(\t\022\r\n\005Field\030\002 \001(\t\"\272"
    "\001\n\031GetLogFieldConfigResponse\022<\n\006Status\030\001"
    " \002(\0162,.manage.GetLogFieldConfigResponse."
    "Res_Status\022\r\n\005Error\030\002 \001(\t\022)\n\014Fieldconfig"
    "s\030\003 \003(\0132\023.manage.FiledConfig\"%\n\nRes_Stat"
    "us\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020\001\"d\n\031GetLogTra"
    "nsmitStatRequest\022\023\n\013Application\030\001 \001(\t\022\017\n"
    "\007Logtype\030\002 \001(\010\022\020\n\010Startime\030\003 \002(\003\022\017\n\007Endt"
    "ime\030\004 \002(\003\"\260\001\n\032GetLogTransmitStatResponse"
    "\022=\n\006Status\030\001 \002(\0162-.manage.GetLogTransmit"
    "StatResponse.Res_Status\022\r\n\005Error\030\002 \001(\t\022\035"
    "\n\003cnt\030\003 \003(\0132\020.manage.MapEntry\"%\n\nRes_Sta"
    "tus\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020\001\"\?\n\031AddLogTr"
    "ansmitStatRequest\022\023\n\013Application\030\001 \002(\t\022\r"
    "\n\005Srcid\030\002 \002(\t\"\221\001\n\032AddLogTransmitStatResp"
    "onse\022=\n\006Status\030\001 \002(\0162-.manage.AddLogTran"
    "smitStatResponse.Res_Status\022\r\n\005Error\030\002 \001"
    "(\t\"%\n\nRes_Status\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020"
    "\001\"6\n\031SetLogFilterConfigRequest\022\n\n\002Op\030\001 \002"
    "(\010\022\r\n\005Srcid\030\002 \002(\t\"\221\001\n\032SetLogFilterConfig"
    "Response\022=\n\006Status\030\001 \002(\0162-.manage.SetLog"
    "FilterConfigResponse.Res_Status\022\r\n\005Error"
    "\030\002 \001(\t\"%\n\nRes_Status\022\013\n\007SUCCEED\020\000\022\n\n\006FAI"
    "LED\020\001\"0\n\031GetLogFilterConfigRequest\022\023\n\013Ap"
    "plication\030\001 \001(\010\"\241\001\n\032GetLogFilterConfigRe"
    "sponse\022=\n\006Status\030\001 \002(\0162-.manage.GetLogFi"
    "lterConfigResponse.Res_Status\022\r\n\005Error\030\002"
    " \001(\t\022\016\n\006Srcids\030\003 \003(\t\"%\n\nRes_Status\022\013\n\007SU"
    "CCEED\020\000\022\n\n\006FAILED\020\001\"2\n\027PullSwitchConfigR"
    "equest\022\n\n\002op\030\001 \002(\010\022\013\n\003idx\030\002 \002(\r\"\215\001\n\030Pull"
    "SwitchConfigResponse\022;\n\006Status\030\001 \002(\0162+.m"
    "anage.PullSwitchConfigResponse.Res_Statu"
    "s\022\r\n\005Error\030\002 \001(\t\"%\n\nRes_Status\022\013\n\007SUCCEE"
    "D\020\000\022\n\n\006FAILED\020\001\"2\n\021RetransmitRequest\022\014\n\004"
    "type\030\001 \002(\010\022\017\n\007package\030\002 \002(\t\"\201\001\n\022Retransm"
    "itResponse\0225\n\006Status\030\001 \002(\0162%.manage.Retr"
    "ansmitResponse.Res_Status\022\r\n\005Error\030\002 \001(\t"
    "\"%\n\nRes_Status\022\013\n\007SUCCEED\020\000\022\n\n\006FAILED\020\0012"
    "\323\005\n\rManageService\022[\n\022SetLogFilterConfig\022"
    "!.manage.SetLogFilterConfigRequest\032\".man"
    "age.SetLogFilterConfigResponse\022[\n\022GetLog"
    "FilterConfig\022!.manage.GetLogFilterConfig"
    "Request\032\".manage.GetLogFilterConfigRespo"
    "nse\022X\n\021SetLogFieldConfig\022 .manage.SetLog"
    "FieldConfigRequest\032!.manage.SetLogFieldC"
    "onfigResponse\022X\n\021GetLogFieldConfig\022 .man"
    "age.GetLogFieldConfigRequest\032!.manage.Ge"
    "tLogFieldConfigResponse\022[\n\022GetLogTransmi"
    "tStat\022!.manage.GetLogTransmitStatRequest"
    "\032\".manage.GetLogTransmitStatResponse\022[\n\022"
    "AddLogTransmitStat\022!.manage.AddLogTransm"
    "itStatRequest\032\".manage.AddLogTransmitSta"
    "tResponse\022U\n\020PullSwitchConfig\022\037.manage.P"
    "ullSwitchConfigRequest\032 .manage.PullSwit"
    "chConfigResponse\022C\n\nRetransmit\022\031.manage."
    "RetransmitRequest\032\032.manage.RetransmitRes"
    "ponseB\003\200\001\001", 2650);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manage.proto", &protobuf_RegisterTypes);
  MapEntry::default_instance_ = new MapEntry();
  FiledConfig::default_instance_ = new FiledConfig();
  SetLogFieldConfigRequest::default_instance_ = new SetLogFieldConfigRequest();
  SetLogFieldConfigResponse::default_instance_ = new SetLogFieldConfigResponse();
  GetLogFieldConfigRequest::default_instance_ = new GetLogFieldConfigRequest();
  GetLogFieldConfigResponse::default_instance_ = new GetLogFieldConfigResponse();
  GetLogTransmitStatRequest::default_instance_ = new GetLogTransmitStatRequest();
  GetLogTransmitStatResponse::default_instance_ = new GetLogTransmitStatResponse();
  AddLogTransmitStatRequest::default_instance_ = new AddLogTransmitStatRequest();
  AddLogTransmitStatResponse::default_instance_ = new AddLogTransmitStatResponse();
  SetLogFilterConfigRequest::default_instance_ = new SetLogFilterConfigRequest();
  SetLogFilterConfigResponse::default_instance_ = new SetLogFilterConfigResponse();
  GetLogFilterConfigRequest::default_instance_ = new GetLogFilterConfigRequest();
  GetLogFilterConfigResponse::default_instance_ = new GetLogFilterConfigResponse();
  PullSwitchConfigRequest::default_instance_ = new PullSwitchConfigRequest();
  PullSwitchConfigResponse::default_instance_ = new PullSwitchConfigResponse();
  RetransmitRequest::default_instance_ = new RetransmitRequest();
  RetransmitResponse::default_instance_ = new RetransmitResponse();
  MapEntry::default_instance_->InitAsDefaultInstance();
  FiledConfig::default_instance_->InitAsDefaultInstance();
  SetLogFieldConfigRequest::default_instance_->InitAsDefaultInstance();
  SetLogFieldConfigResponse::default_instance_->InitAsDefaultInstance();
  GetLogFieldConfigRequest::default_instance_->InitAsDefaultInstance();
  GetLogFieldConfigResponse::default_instance_->InitAsDefaultInstance();
  GetLogTransmitStatRequest::default_instance_->InitAsDefaultInstance();
  GetLogTransmitStatResponse::default_instance_->InitAsDefaultInstance();
  AddLogTransmitStatRequest::default_instance_->InitAsDefaultInstance();
  AddLogTransmitStatResponse::default_instance_->InitAsDefaultInstance();
  SetLogFilterConfigRequest::default_instance_->InitAsDefaultInstance();
  SetLogFilterConfigResponse::default_instance_->InitAsDefaultInstance();
  GetLogFilterConfigRequest::default_instance_->InitAsDefaultInstance();
  GetLogFilterConfigResponse::default_instance_->InitAsDefaultInstance();
  PullSwitchConfigRequest::default_instance_->InitAsDefaultInstance();
  PullSwitchConfigResponse::default_instance_->InitAsDefaultInstance();
  RetransmitRequest::default_instance_->InitAsDefaultInstance();
  RetransmitResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_manage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_manage_2eproto {
  StaticDescriptorInitializer_manage_2eproto() {
    protobuf_AddDesc_manage_2eproto();
  }
} static_descriptor_initializer_manage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MapEntry::kKeyFieldNumber;
const int MapEntry::kValueFieldNumber;
#endif  // !_MSC_VER

MapEntry::MapEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.MapEntry)
}

void MapEntry::InitAsDefaultInstance() {
}

MapEntry::MapEntry(const MapEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.MapEntry)
}

void MapEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapEntry::~MapEntry() {
  // @@protoc_insertion_point(destructor:manage.MapEntry)
  SharedDtor();
}

void MapEntry::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void MapEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapEntry_descriptor_;
}

const MapEntry& MapEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

MapEntry* MapEntry::default_instance_ = NULL;

MapEntry* MapEntry::New() const {
  return new MapEntry;
}

void MapEntry::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.MapEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Value;
        break;
      }

      // required string Value = 2;
      case 2: {
        if (tag == 18) {
         parse_Value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.MapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.MapEntry)
  return false;
#undef DO_
}

void MapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.MapEntry)
  // required string Key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.MapEntry)
}

::google::protobuf::uint8* MapEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.MapEntry)
  // required string Key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.MapEntry)
  return target;
}

int MapEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required string Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapEntry::MergeFrom(const MapEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapEntry::CopyFrom(const MapEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MapEntry::Swap(MapEntry* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapEntry_descriptor_;
  metadata.reflection = MapEntry_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FiledConfig::kFieldFieldNumber;
const int FiledConfig::kRegexFieldNumber;
const int FiledConfig::kIstransFieldNumber;
#endif  // !_MSC_VER

FiledConfig::FiledConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.FiledConfig)
}

void FiledConfig::InitAsDefaultInstance() {
}

FiledConfig::FiledConfig(const FiledConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.FiledConfig)
}

void FiledConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  istrans_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FiledConfig::~FiledConfig() {
  // @@protoc_insertion_point(destructor:manage.FiledConfig)
  SharedDtor();
}

void FiledConfig::SharedDtor() {
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regex_;
  }
  if (this != default_instance_) {
  }
}

void FiledConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FiledConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FiledConfig_descriptor_;
}

const FiledConfig& FiledConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

FiledConfig* FiledConfig::default_instance_ = NULL;

FiledConfig* FiledConfig::New() const {
  return new FiledConfig;
}

void FiledConfig::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field_->clear();
      }
    }
    if (has_regex()) {
      if (regex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        regex_->clear();
      }
    }
    istrans_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FiledConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.FiledConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Regex;
        break;
      }

      // required string Regex = 2;
      case 2: {
        if (tag == 18) {
         parse_Regex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regex().data(), this->regex().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "regex");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Istrans;
        break;
      }

      // required bool Istrans = 3;
      case 3: {
        if (tag == 24) {
         parse_Istrans:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istrans_)));
          set_has_istrans();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.FiledConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.FiledConfig)
  return false;
#undef DO_
}

void FiledConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.FiledConfig)
  // required string Field = 1;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field(), output);
  }

  // required string Regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  // required bool Istrans = 3;
  if (has_istrans()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->istrans(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.FiledConfig)
}

::google::protobuf::uint8* FiledConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.FiledConfig)
  // required string Field = 1;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field(), target);
  }

  // required string Regex = 2;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  // required bool Istrans = 3;
  if (has_istrans()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->istrans(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.FiledConfig)
  return target;
}

int FiledConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Field = 1;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

    // required string Regex = 2;
    if (has_regex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regex());
    }

    // required bool Istrans = 3;
    if (has_istrans()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FiledConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FiledConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FiledConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FiledConfig::MergeFrom(const FiledConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field()) {
      set_field(from.field());
    }
    if (from.has_regex()) {
      set_regex(from.regex());
    }
    if (from.has_istrans()) {
      set_istrans(from.istrans());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FiledConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FiledConfig::CopyFrom(const FiledConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FiledConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void FiledConfig::Swap(FiledConfig* other) {
  if (other != this) {
    std::swap(field_, other->field_);
    std::swap(regex_, other->regex_);
    std::swap(istrans_, other->istrans_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FiledConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FiledConfig_descriptor_;
  metadata.reflection = FiledConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetLogFieldConfigRequest::kApplicationFieldNumber;
const int SetLogFieldConfigRequest::kOpFieldNumber;
const int SetLogFieldConfigRequest::kFieldconfigsFieldNumber;
#endif  // !_MSC_VER

SetLogFieldConfigRequest::SetLogFieldConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFieldConfigRequest)
}

void SetLogFieldConfigRequest::InitAsDefaultInstance() {
  fieldconfigs_ = const_cast< ::manage::FiledConfig*>(&::manage::FiledConfig::default_instance());
}

SetLogFieldConfigRequest::SetLogFieldConfigRequest(const SetLogFieldConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFieldConfigRequest)
}

void SetLogFieldConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = false;
  fieldconfigs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFieldConfigRequest::~SetLogFieldConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.SetLogFieldConfigRequest)
  SharedDtor();
}

void SetLogFieldConfigRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (this != default_instance_) {
    delete fieldconfigs_;
  }
}

void SetLogFieldConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFieldConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigRequest_descriptor_;
}

const SetLogFieldConfigRequest& SetLogFieldConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFieldConfigRequest* SetLogFieldConfigRequest::default_instance_ = NULL;

SetLogFieldConfigRequest* SetLogFieldConfigRequest::New() const {
  return new SetLogFieldConfigRequest;
}

void SetLogFieldConfigRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
    op_ = false;
    if (has_fieldconfigs()) {
      if (fieldconfigs_ != NULL) fieldconfigs_->::manage::FiledConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFieldConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFieldConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Op;
        break;
      }

      // required bool Op = 2;
      case 2: {
        if (tag == 16) {
         parse_Op:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Fieldconfigs;
        break;
      }

      // optional .manage.FiledConfig Fieldconfigs = 3;
      case 3: {
        if (tag == 26) {
         parse_Fieldconfigs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fieldconfigs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFieldConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFieldConfigRequest)
  return false;
#undef DO_
}

void SetLogFieldConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFieldConfigRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // required bool Op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->op(), output);
  }

  // optional .manage.FiledConfig Fieldconfigs = 3;
  if (has_fieldconfigs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fieldconfigs(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFieldConfigRequest)
}

::google::protobuf::uint8* SetLogFieldConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFieldConfigRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // required bool Op = 2;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->op(), target);
  }

  // optional .manage.FiledConfig Fieldconfigs = 3;
  if (has_fieldconfigs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fieldconfigs(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFieldConfigRequest)
  return target;
}

int SetLogFieldConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // required bool Op = 2;
    if (has_op()) {
      total_size += 1 + 1;
    }

    // optional .manage.FiledConfig Fieldconfigs = 3;
    if (has_fieldconfigs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fieldconfigs());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFieldConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFieldConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFieldConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFieldConfigRequest::MergeFrom(const SetLogFieldConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_fieldconfigs()) {
      mutable_fieldconfigs()->::manage::FiledConfig::MergeFrom(from.fieldconfigs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFieldConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFieldConfigRequest::CopyFrom(const SetLogFieldConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFieldConfigRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_fieldconfigs()) {
    if (!this->fieldconfigs().IsInitialized()) return false;
  }
  return true;
}

void SetLogFieldConfigRequest::Swap(SetLogFieldConfigRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(op_, other->op_);
    std::swap(fieldconfigs_, other->fieldconfigs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFieldConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFieldConfigRequest_descriptor_;
  metadata.reflection = SetLogFieldConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetLogFieldConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigResponse_Res_Status_descriptor_;
}
bool SetLogFieldConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::SUCCEED;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::FAILED;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::Res_Status_MIN;
const SetLogFieldConfigResponse_Res_Status SetLogFieldConfigResponse::Res_Status_MAX;
const int SetLogFieldConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetLogFieldConfigResponse::kStatusFieldNumber;
const int SetLogFieldConfigResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

SetLogFieldConfigResponse::SetLogFieldConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFieldConfigResponse)
}

void SetLogFieldConfigResponse::InitAsDefaultInstance() {
}

SetLogFieldConfigResponse::SetLogFieldConfigResponse(const SetLogFieldConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFieldConfigResponse)
}

void SetLogFieldConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFieldConfigResponse::~SetLogFieldConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.SetLogFieldConfigResponse)
  SharedDtor();
}

void SetLogFieldConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void SetLogFieldConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFieldConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFieldConfigResponse_descriptor_;
}

const SetLogFieldConfigResponse& SetLogFieldConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFieldConfigResponse* SetLogFieldConfigResponse::default_instance_ = NULL;

SetLogFieldConfigResponse* SetLogFieldConfigResponse::New() const {
  return new SetLogFieldConfigResponse;
}

void SetLogFieldConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFieldConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFieldConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.SetLogFieldConfigResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::SetLogFieldConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::SetLogFieldConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFieldConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFieldConfigResponse)
  return false;
#undef DO_
}

void SetLogFieldConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFieldConfigResponse)
  // required .manage.SetLogFieldConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFieldConfigResponse)
}

::google::protobuf::uint8* SetLogFieldConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFieldConfigResponse)
  // required .manage.SetLogFieldConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFieldConfigResponse)
  return target;
}

int SetLogFieldConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.SetLogFieldConfigResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFieldConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFieldConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFieldConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFieldConfigResponse::MergeFrom(const SetLogFieldConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFieldConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFieldConfigResponse::CopyFrom(const SetLogFieldConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFieldConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetLogFieldConfigResponse::Swap(SetLogFieldConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFieldConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFieldConfigResponse_descriptor_;
  metadata.reflection = SetLogFieldConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLogFieldConfigRequest::kApplicationFieldNumber;
const int GetLogFieldConfigRequest::kFieldFieldNumber;
#endif  // !_MSC_VER

GetLogFieldConfigRequest::GetLogFieldConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFieldConfigRequest)
}

void GetLogFieldConfigRequest::InitAsDefaultInstance() {
}

GetLogFieldConfigRequest::GetLogFieldConfigRequest(const GetLogFieldConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFieldConfigRequest)
}

void GetLogFieldConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFieldConfigRequest::~GetLogFieldConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.GetLogFieldConfigRequest)
  SharedDtor();
}

void GetLogFieldConfigRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_;
  }
  if (this != default_instance_) {
  }
}

void GetLogFieldConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFieldConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigRequest_descriptor_;
}

const GetLogFieldConfigRequest& GetLogFieldConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFieldConfigRequest* GetLogFieldConfigRequest::default_instance_ = NULL;

GetLogFieldConfigRequest* GetLogFieldConfigRequest::New() const {
  return new GetLogFieldConfigRequest;
}

void GetLogFieldConfigRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
    if (has_field()) {
      if (field_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFieldConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFieldConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Field;
        break;
      }

      // optional string Field = 2;
      case 2: {
        if (tag == 18) {
         parse_Field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field().data(), this->field().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFieldConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFieldConfigRequest)
  return false;
#undef DO_
}

void GetLogFieldConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFieldConfigRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // optional string Field = 2;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFieldConfigRequest)
}

::google::protobuf::uint8* GetLogFieldConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFieldConfigRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // optional string Field = 2;
  if (has_field()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field().data(), this->field().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFieldConfigRequest)
  return target;
}

int GetLogFieldConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // optional string Field = 2;
    if (has_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFieldConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFieldConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFieldConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFieldConfigRequest::MergeFrom(const GetLogFieldConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_field()) {
      set_field(from.field());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFieldConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFieldConfigRequest::CopyFrom(const GetLogFieldConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFieldConfigRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetLogFieldConfigRequest::Swap(GetLogFieldConfigRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(field_, other->field_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFieldConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFieldConfigRequest_descriptor_;
  metadata.reflection = GetLogFieldConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetLogFieldConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigResponse_Res_Status_descriptor_;
}
bool GetLogFieldConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::SUCCEED;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::FAILED;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::Res_Status_MIN;
const GetLogFieldConfigResponse_Res_Status GetLogFieldConfigResponse::Res_Status_MAX;
const int GetLogFieldConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GetLogFieldConfigResponse::kStatusFieldNumber;
const int GetLogFieldConfigResponse::kErrorFieldNumber;
const int GetLogFieldConfigResponse::kFieldconfigsFieldNumber;
#endif  // !_MSC_VER

GetLogFieldConfigResponse::GetLogFieldConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFieldConfigResponse)
}

void GetLogFieldConfigResponse::InitAsDefaultInstance() {
}

GetLogFieldConfigResponse::GetLogFieldConfigResponse(const GetLogFieldConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFieldConfigResponse)
}

void GetLogFieldConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFieldConfigResponse::~GetLogFieldConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.GetLogFieldConfigResponse)
  SharedDtor();
}

void GetLogFieldConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void GetLogFieldConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFieldConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFieldConfigResponse_descriptor_;
}

const GetLogFieldConfigResponse& GetLogFieldConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFieldConfigResponse* GetLogFieldConfigResponse::default_instance_ = NULL;

GetLogFieldConfigResponse* GetLogFieldConfigResponse::New() const {
  return new GetLogFieldConfigResponse;
}

void GetLogFieldConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  fieldconfigs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFieldConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFieldConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.GetLogFieldConfigResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::GetLogFieldConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::GetLogFieldConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Fieldconfigs;
        break;
      }

      // repeated .manage.FiledConfig Fieldconfigs = 3;
      case 3: {
        if (tag == 26) {
         parse_Fieldconfigs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fieldconfigs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Fieldconfigs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFieldConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFieldConfigResponse)
  return false;
#undef DO_
}

void GetLogFieldConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFieldConfigResponse)
  // required .manage.GetLogFieldConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // repeated .manage.FiledConfig Fieldconfigs = 3;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fieldconfigs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFieldConfigResponse)
}

::google::protobuf::uint8* GetLogFieldConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFieldConfigResponse)
  // required .manage.GetLogFieldConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // repeated .manage.FiledConfig Fieldconfigs = 3;
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fieldconfigs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFieldConfigResponse)
  return target;
}

int GetLogFieldConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.GetLogFieldConfigResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  // repeated .manage.FiledConfig Fieldconfigs = 3;
  total_size += 1 * this->fieldconfigs_size();
  for (int i = 0; i < this->fieldconfigs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fieldconfigs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFieldConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFieldConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFieldConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFieldConfigResponse::MergeFrom(const GetLogFieldConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  fieldconfigs_.MergeFrom(from.fieldconfigs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFieldConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFieldConfigResponse::CopyFrom(const GetLogFieldConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFieldConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->fieldconfigs())) return false;
  return true;
}

void GetLogFieldConfigResponse::Swap(GetLogFieldConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    fieldconfigs_.Swap(&other->fieldconfigs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFieldConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFieldConfigResponse_descriptor_;
  metadata.reflection = GetLogFieldConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLogTransmitStatRequest::kApplicationFieldNumber;
const int GetLogTransmitStatRequest::kLogtypeFieldNumber;
const int GetLogTransmitStatRequest::kStartimeFieldNumber;
const int GetLogTransmitStatRequest::kEndtimeFieldNumber;
#endif  // !_MSC_VER

GetLogTransmitStatRequest::GetLogTransmitStatRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogTransmitStatRequest)
}

void GetLogTransmitStatRequest::InitAsDefaultInstance() {
}

GetLogTransmitStatRequest::GetLogTransmitStatRequest(const GetLogTransmitStatRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogTransmitStatRequest)
}

void GetLogTransmitStatRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logtype_ = false;
  startime_ = GOOGLE_LONGLONG(0);
  endtime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogTransmitStatRequest::~GetLogTransmitStatRequest() {
  // @@protoc_insertion_point(destructor:manage.GetLogTransmitStatRequest)
  SharedDtor();
}

void GetLogTransmitStatRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (this != default_instance_) {
  }
}

void GetLogTransmitStatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogTransmitStatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatRequest_descriptor_;
}

const GetLogTransmitStatRequest& GetLogTransmitStatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogTransmitStatRequest* GetLogTransmitStatRequest::default_instance_ = NULL;

GetLogTransmitStatRequest* GetLogTransmitStatRequest::New() const {
  return new GetLogTransmitStatRequest;
}

void GetLogTransmitStatRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetLogTransmitStatRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(startime_, logtype_);
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogTransmitStatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogTransmitStatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Logtype;
        break;
      }

      // optional bool Logtype = 2;
      case 2: {
        if (tag == 16) {
         parse_Logtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &logtype_)));
          set_has_logtype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Startime;
        break;
      }

      // required int64 Startime = 3;
      case 3: {
        if (tag == 24) {
         parse_Startime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &startime_)));
          set_has_startime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Endtime;
        break;
      }

      // required int64 Endtime = 4;
      case 4: {
        if (tag == 32) {
         parse_Endtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &endtime_)));
          set_has_endtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogTransmitStatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogTransmitStatRequest)
  return false;
#undef DO_
}

void GetLogTransmitStatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogTransmitStatRequest)
  // optional string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // optional bool Logtype = 2;
  if (has_logtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->logtype(), output);
  }

  // required int64 Startime = 3;
  if (has_startime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->startime(), output);
  }

  // required int64 Endtime = 4;
  if (has_endtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->endtime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogTransmitStatRequest)
}

::google::protobuf::uint8* GetLogTransmitStatRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogTransmitStatRequest)
  // optional string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // optional bool Logtype = 2;
  if (has_logtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->logtype(), target);
  }

  // required int64 Startime = 3;
  if (has_startime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->startime(), target);
  }

  // required int64 Endtime = 4;
  if (has_endtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->endtime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogTransmitStatRequest)
  return target;
}

int GetLogTransmitStatRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string Application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // optional bool Logtype = 2;
    if (has_logtype()) {
      total_size += 1 + 1;
    }

    // required int64 Startime = 3;
    if (has_startime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->startime());
    }

    // required int64 Endtime = 4;
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->endtime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogTransmitStatRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogTransmitStatRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogTransmitStatRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogTransmitStatRequest::MergeFrom(const GetLogTransmitStatRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_logtype()) {
      set_logtype(from.logtype());
    }
    if (from.has_startime()) {
      set_startime(from.startime());
    }
    if (from.has_endtime()) {
      set_endtime(from.endtime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogTransmitStatRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogTransmitStatRequest::CopyFrom(const GetLogTransmitStatRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogTransmitStatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  return true;
}

void GetLogTransmitStatRequest::Swap(GetLogTransmitStatRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(logtype_, other->logtype_);
    std::swap(startime_, other->startime_);
    std::swap(endtime_, other->endtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogTransmitStatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogTransmitStatRequest_descriptor_;
  metadata.reflection = GetLogTransmitStatRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetLogTransmitStatResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatResponse_Res_Status_descriptor_;
}
bool GetLogTransmitStatResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::SUCCEED;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::FAILED;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::Res_Status_MIN;
const GetLogTransmitStatResponse_Res_Status GetLogTransmitStatResponse::Res_Status_MAX;
const int GetLogTransmitStatResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GetLogTransmitStatResponse::kStatusFieldNumber;
const int GetLogTransmitStatResponse::kErrorFieldNumber;
const int GetLogTransmitStatResponse::kCntFieldNumber;
#endif  // !_MSC_VER

GetLogTransmitStatResponse::GetLogTransmitStatResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogTransmitStatResponse)
}

void GetLogTransmitStatResponse::InitAsDefaultInstance() {
}

GetLogTransmitStatResponse::GetLogTransmitStatResponse(const GetLogTransmitStatResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogTransmitStatResponse)
}

void GetLogTransmitStatResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogTransmitStatResponse::~GetLogTransmitStatResponse() {
  // @@protoc_insertion_point(destructor:manage.GetLogTransmitStatResponse)
  SharedDtor();
}

void GetLogTransmitStatResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void GetLogTransmitStatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogTransmitStatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogTransmitStatResponse_descriptor_;
}

const GetLogTransmitStatResponse& GetLogTransmitStatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogTransmitStatResponse* GetLogTransmitStatResponse::default_instance_ = NULL;

GetLogTransmitStatResponse* GetLogTransmitStatResponse::New() const {
  return new GetLogTransmitStatResponse;
}

void GetLogTransmitStatResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  cnt_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogTransmitStatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogTransmitStatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.GetLogTransmitStatResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::GetLogTransmitStatResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::GetLogTransmitStatResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cnt;
        break;
      }

      // repeated .manage.MapEntry cnt = 3;
      case 3: {
        if (tag == 26) {
         parse_cnt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cnt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cnt;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogTransmitStatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogTransmitStatResponse)
  return false;
#undef DO_
}

void GetLogTransmitStatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogTransmitStatResponse)
  // required .manage.GetLogTransmitStatResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // repeated .manage.MapEntry cnt = 3;
  for (int i = 0; i < this->cnt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cnt(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogTransmitStatResponse)
}

::google::protobuf::uint8* GetLogTransmitStatResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogTransmitStatResponse)
  // required .manage.GetLogTransmitStatResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // repeated .manage.MapEntry cnt = 3;
  for (int i = 0; i < this->cnt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cnt(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogTransmitStatResponse)
  return target;
}

int GetLogTransmitStatResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.GetLogTransmitStatResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  // repeated .manage.MapEntry cnt = 3;
  total_size += 1 * this->cnt_size();
  for (int i = 0; i < this->cnt_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cnt(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogTransmitStatResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogTransmitStatResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogTransmitStatResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogTransmitStatResponse::MergeFrom(const GetLogTransmitStatResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  cnt_.MergeFrom(from.cnt_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogTransmitStatResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogTransmitStatResponse::CopyFrom(const GetLogTransmitStatResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogTransmitStatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->cnt())) return false;
  return true;
}

void GetLogTransmitStatResponse::Swap(GetLogTransmitStatResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    cnt_.Swap(&other->cnt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogTransmitStatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogTransmitStatResponse_descriptor_;
  metadata.reflection = GetLogTransmitStatResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddLogTransmitStatRequest::kApplicationFieldNumber;
const int AddLogTransmitStatRequest::kSrcidFieldNumber;
#endif  // !_MSC_VER

AddLogTransmitStatRequest::AddLogTransmitStatRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.AddLogTransmitStatRequest)
}

void AddLogTransmitStatRequest::InitAsDefaultInstance() {
}

AddLogTransmitStatRequest::AddLogTransmitStatRequest(const AddLogTransmitStatRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.AddLogTransmitStatRequest)
}

void AddLogTransmitStatRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  application_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddLogTransmitStatRequest::~AddLogTransmitStatRequest() {
  // @@protoc_insertion_point(destructor:manage.AddLogTransmitStatRequest)
  SharedDtor();
}

void AddLogTransmitStatRequest::SharedDtor() {
  if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete application_;
  }
  if (srcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcid_;
  }
  if (this != default_instance_) {
  }
}

void AddLogTransmitStatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddLogTransmitStatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddLogTransmitStatRequest_descriptor_;
}

const AddLogTransmitStatRequest& AddLogTransmitStatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

AddLogTransmitStatRequest* AddLogTransmitStatRequest::default_instance_ = NULL;

AddLogTransmitStatRequest* AddLogTransmitStatRequest::New() const {
  return new AddLogTransmitStatRequest;
}

void AddLogTransmitStatRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_application()) {
      if (application_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        application_->clear();
      }
    }
    if (has_srcid()) {
      if (srcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srcid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddLogTransmitStatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.AddLogTransmitStatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Application = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_application()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->application().data(), this->application().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "application");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Srcid;
        break;
      }

      // required string Srcid = 2;
      case 2: {
        if (tag == 18) {
         parse_Srcid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srcid().data(), this->srcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srcid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.AddLogTransmitStatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.AddLogTransmitStatRequest)
  return false;
#undef DO_
}

void AddLogTransmitStatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.AddLogTransmitStatRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->application(), output);
  }

  // required string Srcid = 2;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.AddLogTransmitStatRequest)
}

::google::protobuf::uint8* AddLogTransmitStatRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.AddLogTransmitStatRequest)
  // required string Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->application().data(), this->application().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "application");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->application(), target);
  }

  // required string Srcid = 2;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.AddLogTransmitStatRequest)
  return target;
}

int AddLogTransmitStatRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Application = 1;
    if (has_application()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->application());
    }

    // required string Srcid = 2;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddLogTransmitStatRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddLogTransmitStatRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddLogTransmitStatRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddLogTransmitStatRequest::MergeFrom(const AddLogTransmitStatRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddLogTransmitStatRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddLogTransmitStatRequest::CopyFrom(const AddLogTransmitStatRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLogTransmitStatRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AddLogTransmitStatRequest::Swap(AddLogTransmitStatRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(srcid_, other->srcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddLogTransmitStatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddLogTransmitStatRequest_descriptor_;
  metadata.reflection = AddLogTransmitStatRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* AddLogTransmitStatResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddLogTransmitStatResponse_Res_Status_descriptor_;
}
bool AddLogTransmitStatResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const AddLogTransmitStatResponse_Res_Status AddLogTransmitStatResponse::SUCCEED;
const AddLogTransmitStatResponse_Res_Status AddLogTransmitStatResponse::FAILED;
const AddLogTransmitStatResponse_Res_Status AddLogTransmitStatResponse::Res_Status_MIN;
const AddLogTransmitStatResponse_Res_Status AddLogTransmitStatResponse::Res_Status_MAX;
const int AddLogTransmitStatResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int AddLogTransmitStatResponse::kStatusFieldNumber;
const int AddLogTransmitStatResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

AddLogTransmitStatResponse::AddLogTransmitStatResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.AddLogTransmitStatResponse)
}

void AddLogTransmitStatResponse::InitAsDefaultInstance() {
}

AddLogTransmitStatResponse::AddLogTransmitStatResponse(const AddLogTransmitStatResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.AddLogTransmitStatResponse)
}

void AddLogTransmitStatResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddLogTransmitStatResponse::~AddLogTransmitStatResponse() {
  // @@protoc_insertion_point(destructor:manage.AddLogTransmitStatResponse)
  SharedDtor();
}

void AddLogTransmitStatResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void AddLogTransmitStatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddLogTransmitStatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddLogTransmitStatResponse_descriptor_;
}

const AddLogTransmitStatResponse& AddLogTransmitStatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

AddLogTransmitStatResponse* AddLogTransmitStatResponse::default_instance_ = NULL;

AddLogTransmitStatResponse* AddLogTransmitStatResponse::New() const {
  return new AddLogTransmitStatResponse;
}

void AddLogTransmitStatResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddLogTransmitStatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.AddLogTransmitStatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.AddLogTransmitStatResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::AddLogTransmitStatResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::AddLogTransmitStatResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.AddLogTransmitStatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.AddLogTransmitStatResponse)
  return false;
#undef DO_
}

void AddLogTransmitStatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.AddLogTransmitStatResponse)
  // required .manage.AddLogTransmitStatResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.AddLogTransmitStatResponse)
}

::google::protobuf::uint8* AddLogTransmitStatResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.AddLogTransmitStatResponse)
  // required .manage.AddLogTransmitStatResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.AddLogTransmitStatResponse)
  return target;
}

int AddLogTransmitStatResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.AddLogTransmitStatResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddLogTransmitStatResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddLogTransmitStatResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddLogTransmitStatResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddLogTransmitStatResponse::MergeFrom(const AddLogTransmitStatResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddLogTransmitStatResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddLogTransmitStatResponse::CopyFrom(const AddLogTransmitStatResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLogTransmitStatResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AddLogTransmitStatResponse::Swap(AddLogTransmitStatResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddLogTransmitStatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddLogTransmitStatResponse_descriptor_;
  metadata.reflection = AddLogTransmitStatResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetLogFilterConfigRequest::kOpFieldNumber;
const int SetLogFilterConfigRequest::kSrcidFieldNumber;
#endif  // !_MSC_VER

SetLogFilterConfigRequest::SetLogFilterConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFilterConfigRequest)
}

void SetLogFilterConfigRequest::InitAsDefaultInstance() {
}

SetLogFilterConfigRequest::SetLogFilterConfigRequest(const SetLogFilterConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFilterConfigRequest)
}

void SetLogFilterConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  op_ = false;
  srcid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFilterConfigRequest::~SetLogFilterConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.SetLogFilterConfigRequest)
  SharedDtor();
}

void SetLogFilterConfigRequest::SharedDtor() {
  if (srcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcid_;
  }
  if (this != default_instance_) {
  }
}

void SetLogFilterConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFilterConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFilterConfigRequest_descriptor_;
}

const SetLogFilterConfigRequest& SetLogFilterConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFilterConfigRequest* SetLogFilterConfigRequest::default_instance_ = NULL;

SetLogFilterConfigRequest* SetLogFilterConfigRequest::New() const {
  return new SetLogFilterConfigRequest;
}

void SetLogFilterConfigRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    op_ = false;
    if (has_srcid()) {
      if (srcid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srcid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFilterConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFilterConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool Op = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Srcid;
        break;
      }

      // required string Srcid = 2;
      case 2: {
        if (tag == 18) {
         parse_Srcid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srcid().data(), this->srcid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srcid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFilterConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFilterConfigRequest)
  return false;
#undef DO_
}

void SetLogFilterConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFilterConfigRequest)
  // required bool Op = 1;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->op(), output);
  }

  // required string Srcid = 2;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFilterConfigRequest)
}

::google::protobuf::uint8* SetLogFilterConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFilterConfigRequest)
  // required bool Op = 1;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->op(), target);
  }

  // required string Srcid = 2;
  if (has_srcid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFilterConfigRequest)
  return target;
}

int SetLogFilterConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool Op = 1;
    if (has_op()) {
      total_size += 1 + 1;
    }

    // required string Srcid = 2;
    if (has_srcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFilterConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFilterConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFilterConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFilterConfigRequest::MergeFrom(const SetLogFilterConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_srcid()) {
      set_srcid(from.srcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFilterConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFilterConfigRequest::CopyFrom(const SetLogFilterConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFilterConfigRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetLogFilterConfigRequest::Swap(SetLogFilterConfigRequest* other) {
  if (other != this) {
    std::swap(op_, other->op_);
    std::swap(srcid_, other->srcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFilterConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFilterConfigRequest_descriptor_;
  metadata.reflection = SetLogFilterConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SetLogFilterConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFilterConfigResponse_Res_Status_descriptor_;
}
bool SetLogFilterConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SetLogFilterConfigResponse_Res_Status SetLogFilterConfigResponse::SUCCEED;
const SetLogFilterConfigResponse_Res_Status SetLogFilterConfigResponse::FAILED;
const SetLogFilterConfigResponse_Res_Status SetLogFilterConfigResponse::Res_Status_MIN;
const SetLogFilterConfigResponse_Res_Status SetLogFilterConfigResponse::Res_Status_MAX;
const int SetLogFilterConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SetLogFilterConfigResponse::kStatusFieldNumber;
const int SetLogFilterConfigResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

SetLogFilterConfigResponse::SetLogFilterConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.SetLogFilterConfigResponse)
}

void SetLogFilterConfigResponse::InitAsDefaultInstance() {
}

SetLogFilterConfigResponse::SetLogFilterConfigResponse(const SetLogFilterConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.SetLogFilterConfigResponse)
}

void SetLogFilterConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLogFilterConfigResponse::~SetLogFilterConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.SetLogFilterConfigResponse)
  SharedDtor();
}

void SetLogFilterConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void SetLogFilterConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLogFilterConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLogFilterConfigResponse_descriptor_;
}

const SetLogFilterConfigResponse& SetLogFilterConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

SetLogFilterConfigResponse* SetLogFilterConfigResponse::default_instance_ = NULL;

SetLogFilterConfigResponse* SetLogFilterConfigResponse::New() const {
  return new SetLogFilterConfigResponse;
}

void SetLogFilterConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLogFilterConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.SetLogFilterConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.SetLogFilterConfigResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::SetLogFilterConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::SetLogFilterConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.SetLogFilterConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.SetLogFilterConfigResponse)
  return false;
#undef DO_
}

void SetLogFilterConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.SetLogFilterConfigResponse)
  // required .manage.SetLogFilterConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.SetLogFilterConfigResponse)
}

::google::protobuf::uint8* SetLogFilterConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.SetLogFilterConfigResponse)
  // required .manage.SetLogFilterConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.SetLogFilterConfigResponse)
  return target;
}

int SetLogFilterConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.SetLogFilterConfigResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLogFilterConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLogFilterConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLogFilterConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLogFilterConfigResponse::MergeFrom(const SetLogFilterConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLogFilterConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogFilterConfigResponse::CopyFrom(const SetLogFilterConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogFilterConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetLogFilterConfigResponse::Swap(SetLogFilterConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLogFilterConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLogFilterConfigResponse_descriptor_;
  metadata.reflection = SetLogFilterConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLogFilterConfigRequest::kApplicationFieldNumber;
#endif  // !_MSC_VER

GetLogFilterConfigRequest::GetLogFilterConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFilterConfigRequest)
}

void GetLogFilterConfigRequest::InitAsDefaultInstance() {
}

GetLogFilterConfigRequest::GetLogFilterConfigRequest(const GetLogFilterConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFilterConfigRequest)
}

void GetLogFilterConfigRequest::SharedCtor() {
  _cached_size_ = 0;
  application_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFilterConfigRequest::~GetLogFilterConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.GetLogFilterConfigRequest)
  SharedDtor();
}

void GetLogFilterConfigRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetLogFilterConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFilterConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFilterConfigRequest_descriptor_;
}

const GetLogFilterConfigRequest& GetLogFilterConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFilterConfigRequest* GetLogFilterConfigRequest::default_instance_ = NULL;

GetLogFilterConfigRequest* GetLogFilterConfigRequest::New() const {
  return new GetLogFilterConfigRequest;
}

void GetLogFilterConfigRequest::Clear() {
  application_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFilterConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFilterConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Application = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &application_)));
          set_has_application();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFilterConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFilterConfigRequest)
  return false;
#undef DO_
}

void GetLogFilterConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFilterConfigRequest)
  // optional bool Application = 1;
  if (has_application()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->application(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFilterConfigRequest)
}

::google::protobuf::uint8* GetLogFilterConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFilterConfigRequest)
  // optional bool Application = 1;
  if (has_application()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->application(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFilterConfigRequest)
  return target;
}

int GetLogFilterConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool Application = 1;
    if (has_application()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFilterConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFilterConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFilterConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFilterConfigRequest::MergeFrom(const GetLogFilterConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_application()) {
      set_application(from.application());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFilterConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFilterConfigRequest::CopyFrom(const GetLogFilterConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFilterConfigRequest::IsInitialized() const {

  return true;
}

void GetLogFilterConfigRequest::Swap(GetLogFilterConfigRequest* other) {
  if (other != this) {
    std::swap(application_, other->application_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFilterConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFilterConfigRequest_descriptor_;
  metadata.reflection = GetLogFilterConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GetLogFilterConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFilterConfigResponse_Res_Status_descriptor_;
}
bool GetLogFilterConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GetLogFilterConfigResponse_Res_Status GetLogFilterConfigResponse::SUCCEED;
const GetLogFilterConfigResponse_Res_Status GetLogFilterConfigResponse::FAILED;
const GetLogFilterConfigResponse_Res_Status GetLogFilterConfigResponse::Res_Status_MIN;
const GetLogFilterConfigResponse_Res_Status GetLogFilterConfigResponse::Res_Status_MAX;
const int GetLogFilterConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GetLogFilterConfigResponse::kStatusFieldNumber;
const int GetLogFilterConfigResponse::kErrorFieldNumber;
const int GetLogFilterConfigResponse::kSrcidsFieldNumber;
#endif  // !_MSC_VER

GetLogFilterConfigResponse::GetLogFilterConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.GetLogFilterConfigResponse)
}

void GetLogFilterConfigResponse::InitAsDefaultInstance() {
}

GetLogFilterConfigResponse::GetLogFilterConfigResponse(const GetLogFilterConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.GetLogFilterConfigResponse)
}

void GetLogFilterConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLogFilterConfigResponse::~GetLogFilterConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.GetLogFilterConfigResponse)
  SharedDtor();
}

void GetLogFilterConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void GetLogFilterConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLogFilterConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLogFilterConfigResponse_descriptor_;
}

const GetLogFilterConfigResponse& GetLogFilterConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

GetLogFilterConfigResponse* GetLogFilterConfigResponse::default_instance_ = NULL;

GetLogFilterConfigResponse* GetLogFilterConfigResponse::New() const {
  return new GetLogFilterConfigResponse;
}

void GetLogFilterConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  srcids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLogFilterConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.GetLogFilterConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.GetLogFilterConfigResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::GetLogFilterConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::GetLogFilterConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Srcids;
        break;
      }

      // repeated string Srcids = 3;
      case 3: {
        if (tag == 26) {
         parse_Srcids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srcids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srcids(this->srcids_size() - 1).data(),
            this->srcids(this->srcids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srcids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Srcids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.GetLogFilterConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.GetLogFilterConfigResponse)
  return false;
#undef DO_
}

void GetLogFilterConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.GetLogFilterConfigResponse)
  // required .manage.GetLogFilterConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // repeated string Srcids = 3;
  for (int i = 0; i < this->srcids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srcids(i).data(), this->srcids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srcids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->srcids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.GetLogFilterConfigResponse)
}

::google::protobuf::uint8* GetLogFilterConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.GetLogFilterConfigResponse)
  // required .manage.GetLogFilterConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // repeated string Srcids = 3;
  for (int i = 0; i < this->srcids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srcids(i).data(), this->srcids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srcids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->srcids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.GetLogFilterConfigResponse)
  return target;
}

int GetLogFilterConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.GetLogFilterConfigResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  // repeated string Srcids = 3;
  total_size += 1 * this->srcids_size();
  for (int i = 0; i < this->srcids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srcids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLogFilterConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLogFilterConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLogFilterConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLogFilterConfigResponse::MergeFrom(const GetLogFilterConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcids_.MergeFrom(from.srcids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLogFilterConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogFilterConfigResponse::CopyFrom(const GetLogFilterConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogFilterConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetLogFilterConfigResponse::Swap(GetLogFilterConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    srcids_.Swap(&other->srcids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLogFilterConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLogFilterConfigResponse_descriptor_;
  metadata.reflection = GetLogFilterConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PullSwitchConfigRequest::kOpFieldNumber;
const int PullSwitchConfigRequest::kIdxFieldNumber;
#endif  // !_MSC_VER

PullSwitchConfigRequest::PullSwitchConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.PullSwitchConfigRequest)
}

void PullSwitchConfigRequest::InitAsDefaultInstance() {
}

PullSwitchConfigRequest::PullSwitchConfigRequest(const PullSwitchConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.PullSwitchConfigRequest)
}

void PullSwitchConfigRequest::SharedCtor() {
  _cached_size_ = 0;
  op_ = false;
  idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PullSwitchConfigRequest::~PullSwitchConfigRequest() {
  // @@protoc_insertion_point(destructor:manage.PullSwitchConfigRequest)
  SharedDtor();
}

void PullSwitchConfigRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PullSwitchConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullSwitchConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PullSwitchConfigRequest_descriptor_;
}

const PullSwitchConfigRequest& PullSwitchConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

PullSwitchConfigRequest* PullSwitchConfigRequest::default_instance_ = NULL;

PullSwitchConfigRequest* PullSwitchConfigRequest::New() const {
  return new PullSwitchConfigRequest;
}

void PullSwitchConfigRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PullSwitchConfigRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(op_, idx_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PullSwitchConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.PullSwitchConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool op = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &op_)));
          set_has_op();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_idx;
        break;
      }

      // required uint32 idx = 2;
      case 2: {
        if (tag == 16) {
         parse_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
          set_has_idx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.PullSwitchConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.PullSwitchConfigRequest)
  return false;
#undef DO_
}

void PullSwitchConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.PullSwitchConfigRequest)
  // required bool op = 1;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->op(), output);
  }

  // required uint32 idx = 2;
  if (has_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.PullSwitchConfigRequest)
}

::google::protobuf::uint8* PullSwitchConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.PullSwitchConfigRequest)
  // required bool op = 1;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->op(), target);
  }

  // required uint32 idx = 2;
  if (has_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.PullSwitchConfigRequest)
  return target;
}

int PullSwitchConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool op = 1;
    if (has_op()) {
      total_size += 1 + 1;
    }

    // required uint32 idx = 2;
    if (has_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullSwitchConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PullSwitchConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PullSwitchConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PullSwitchConfigRequest::MergeFrom(const PullSwitchConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_idx()) {
      set_idx(from.idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PullSwitchConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullSwitchConfigRequest::CopyFrom(const PullSwitchConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullSwitchConfigRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void PullSwitchConfigRequest::Swap(PullSwitchConfigRequest* other) {
  if (other != this) {
    std::swap(op_, other->op_);
    std::swap(idx_, other->idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PullSwitchConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PullSwitchConfigRequest_descriptor_;
  metadata.reflection = PullSwitchConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PullSwitchConfigResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PullSwitchConfigResponse_Res_Status_descriptor_;
}
bool PullSwitchConfigResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PullSwitchConfigResponse_Res_Status PullSwitchConfigResponse::SUCCEED;
const PullSwitchConfigResponse_Res_Status PullSwitchConfigResponse::FAILED;
const PullSwitchConfigResponse_Res_Status PullSwitchConfigResponse::Res_Status_MIN;
const PullSwitchConfigResponse_Res_Status PullSwitchConfigResponse::Res_Status_MAX;
const int PullSwitchConfigResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PullSwitchConfigResponse::kStatusFieldNumber;
const int PullSwitchConfigResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

PullSwitchConfigResponse::PullSwitchConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.PullSwitchConfigResponse)
}

void PullSwitchConfigResponse::InitAsDefaultInstance() {
}

PullSwitchConfigResponse::PullSwitchConfigResponse(const PullSwitchConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.PullSwitchConfigResponse)
}

void PullSwitchConfigResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PullSwitchConfigResponse::~PullSwitchConfigResponse() {
  // @@protoc_insertion_point(destructor:manage.PullSwitchConfigResponse)
  SharedDtor();
}

void PullSwitchConfigResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void PullSwitchConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullSwitchConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PullSwitchConfigResponse_descriptor_;
}

const PullSwitchConfigResponse& PullSwitchConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

PullSwitchConfigResponse* PullSwitchConfigResponse::default_instance_ = NULL;

PullSwitchConfigResponse* PullSwitchConfigResponse::New() const {
  return new PullSwitchConfigResponse;
}

void PullSwitchConfigResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PullSwitchConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.PullSwitchConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.PullSwitchConfigResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::PullSwitchConfigResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::PullSwitchConfigResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.PullSwitchConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.PullSwitchConfigResponse)
  return false;
#undef DO_
}

void PullSwitchConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.PullSwitchConfigResponse)
  // required .manage.PullSwitchConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.PullSwitchConfigResponse)
}

::google::protobuf::uint8* PullSwitchConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.PullSwitchConfigResponse)
  // required .manage.PullSwitchConfigResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.PullSwitchConfigResponse)
  return target;
}

int PullSwitchConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.PullSwitchConfigResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullSwitchConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PullSwitchConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PullSwitchConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PullSwitchConfigResponse::MergeFrom(const PullSwitchConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PullSwitchConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullSwitchConfigResponse::CopyFrom(const PullSwitchConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullSwitchConfigResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PullSwitchConfigResponse::Swap(PullSwitchConfigResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PullSwitchConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PullSwitchConfigResponse_descriptor_;
  metadata.reflection = PullSwitchConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RetransmitRequest::kTypeFieldNumber;
const int RetransmitRequest::kPackageFieldNumber;
#endif  // !_MSC_VER

RetransmitRequest::RetransmitRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.RetransmitRequest)
}

void RetransmitRequest::InitAsDefaultInstance() {
}

RetransmitRequest::RetransmitRequest(const RetransmitRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.RetransmitRequest)
}

void RetransmitRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = false;
  package_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetransmitRequest::~RetransmitRequest() {
  // @@protoc_insertion_point(destructor:manage.RetransmitRequest)
  SharedDtor();
}

void RetransmitRequest::SharedDtor() {
  if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete package_;
  }
  if (this != default_instance_) {
  }
}

void RetransmitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetransmitRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetransmitRequest_descriptor_;
}

const RetransmitRequest& RetransmitRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

RetransmitRequest* RetransmitRequest::default_instance_ = NULL;

RetransmitRequest* RetransmitRequest::New() const {
  return new RetransmitRequest;
}

void RetransmitRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = false;
    if (has_package()) {
      if (package_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        package_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetransmitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.RetransmitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_package;
        break;
      }

      // required string package = 2;
      case 2: {
        if (tag == 18) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package().data(), this->package().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "package");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.RetransmitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.RetransmitRequest)
  return false;
#undef DO_
}

void RetransmitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.RetransmitRequest)
  // required bool type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->type(), output);
  }

  // required string package = 2;
  if (has_package()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->package(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.RetransmitRequest)
}

::google::protobuf::uint8* RetransmitRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.RetransmitRequest)
  // required bool type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->type(), target);
  }

  // required string package = 2;
  if (has_package()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->package(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.RetransmitRequest)
  return target;
}

int RetransmitRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool type = 1;
    if (has_type()) {
      total_size += 1 + 1;
    }

    // required string package = 2;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetransmitRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetransmitRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetransmitRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetransmitRequest::MergeFrom(const RetransmitRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_package()) {
      set_package(from.package());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetransmitRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetransmitRequest::CopyFrom(const RetransmitRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetransmitRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RetransmitRequest::Swap(RetransmitRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(package_, other->package_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetransmitRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetransmitRequest_descriptor_;
  metadata.reflection = RetransmitRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RetransmitResponse_Res_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetransmitResponse_Res_Status_descriptor_;
}
bool RetransmitResponse_Res_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RetransmitResponse_Res_Status RetransmitResponse::SUCCEED;
const RetransmitResponse_Res_Status RetransmitResponse::FAILED;
const RetransmitResponse_Res_Status RetransmitResponse::Res_Status_MIN;
const RetransmitResponse_Res_Status RetransmitResponse::Res_Status_MAX;
const int RetransmitResponse::Res_Status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RetransmitResponse::kStatusFieldNumber;
const int RetransmitResponse::kErrorFieldNumber;
#endif  // !_MSC_VER

RetransmitResponse::RetransmitResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:manage.RetransmitResponse)
}

void RetransmitResponse::InitAsDefaultInstance() {
}

RetransmitResponse::RetransmitResponse(const RetransmitResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:manage.RetransmitResponse)
}

void RetransmitResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RetransmitResponse::~RetransmitResponse() {
  // @@protoc_insertion_point(destructor:manage.RetransmitResponse)
  SharedDtor();
}

void RetransmitResponse::SharedDtor() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void RetransmitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetransmitResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RetransmitResponse_descriptor_;
}

const RetransmitResponse& RetransmitResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_manage_2eproto();
  return *default_instance_;
}

RetransmitResponse* RetransmitResponse::default_instance_ = NULL;

RetransmitResponse* RetransmitResponse::New() const {
  return new RetransmitResponse;
}

void RetransmitResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RetransmitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manage.RetransmitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .manage.RetransmitResponse.Res_Status Status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::manage::RetransmitResponse_Res_Status_IsValid(value)) {
            set_status(static_cast< ::manage::RetransmitResponse_Res_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Error;
        break;
      }

      // optional string Error = 2;
      case 2: {
        if (tag == 18) {
         parse_Error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manage.RetransmitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manage.RetransmitResponse)
  return false;
#undef DO_
}

void RetransmitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manage.RetransmitResponse)
  // required .manage.RetransmitResponse.Res_Status Status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:manage.RetransmitResponse)
}

::google::protobuf::uint8* RetransmitResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:manage.RetransmitResponse)
  // required .manage.RetransmitResponse.Res_Status Status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string Error = 2;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manage.RetransmitResponse)
  return target;
}

int RetransmitResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .manage.RetransmitResponse.Res_Status Status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string Error = 2;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetransmitResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RetransmitResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RetransmitResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RetransmitResponse::MergeFrom(const RetransmitResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RetransmitResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetransmitResponse::CopyFrom(const RetransmitResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetransmitResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RetransmitResponse::Swap(RetransmitResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RetransmitResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RetransmitResponse_descriptor_;
  metadata.reflection = RetransmitResponse_reflection_;
  return metadata;
}


// ===================================================================

ManageService::~ManageService() {}

const ::google::protobuf::ServiceDescriptor* ManageService::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManageService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* ManageService::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManageService_descriptor_;
}

void ManageService::SetLogFilterConfig(::google::protobuf::RpcController* controller,
                         const ::manage::SetLogFilterConfigRequest*,
                         ::manage::SetLogFilterConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetLogFilterConfig() not implemented.");
  done->Run();
}

void ManageService::GetLogFilterConfig(::google::protobuf::RpcController* controller,
                         const ::manage::GetLogFilterConfigRequest*,
                         ::manage::GetLogFilterConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLogFilterConfig() not implemented.");
  done->Run();
}

void ManageService::SetLogFieldConfig(::google::protobuf::RpcController* controller,
                         const ::manage::SetLogFieldConfigRequest*,
                         ::manage::SetLogFieldConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetLogFieldConfig() not implemented.");
  done->Run();
}

void ManageService::GetLogFieldConfig(::google::protobuf::RpcController* controller,
                         const ::manage::GetLogFieldConfigRequest*,
                         ::manage::GetLogFieldConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLogFieldConfig() not implemented.");
  done->Run();
}

void ManageService::GetLogTransmitStat(::google::protobuf::RpcController* controller,
                         const ::manage::GetLogTransmitStatRequest*,
                         ::manage::GetLogTransmitStatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetLogTransmitStat() not implemented.");
  done->Run();
}

void ManageService::AddLogTransmitStat(::google::protobuf::RpcController* controller,
                         const ::manage::AddLogTransmitStatRequest*,
                         ::manage::AddLogTransmitStatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method AddLogTransmitStat() not implemented.");
  done->Run();
}

void ManageService::PullSwitchConfig(::google::protobuf::RpcController* controller,
                         const ::manage::PullSwitchConfigRequest*,
                         ::manage::PullSwitchConfigResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method PullSwitchConfig() not implemented.");
  done->Run();
}

void ManageService::Retransmit(::google::protobuf::RpcController* controller,
                         const ::manage::RetransmitRequest*,
                         ::manage::RetransmitResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Retransmit() not implemented.");
  done->Run();
}

void ManageService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), ManageService_descriptor_);
  switch(method->index()) {
    case 0:
      SetLogFilterConfig(controller,
             ::google::protobuf::down_cast<const ::manage::SetLogFilterConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::SetLogFilterConfigResponse*>(response),
             done);
      break;
    case 1:
      GetLogFilterConfig(controller,
             ::google::protobuf::down_cast<const ::manage::GetLogFilterConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::GetLogFilterConfigResponse*>(response),
             done);
      break;
    case 2:
      SetLogFieldConfig(controller,
             ::google::protobuf::down_cast<const ::manage::SetLogFieldConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::SetLogFieldConfigResponse*>(response),
             done);
      break;
    case 3:
      GetLogFieldConfig(controller,
             ::google::protobuf::down_cast<const ::manage::GetLogFieldConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::GetLogFieldConfigResponse*>(response),
             done);
      break;
    case 4:
      GetLogTransmitStat(controller,
             ::google::protobuf::down_cast<const ::manage::GetLogTransmitStatRequest*>(request),
             ::google::protobuf::down_cast< ::manage::GetLogTransmitStatResponse*>(response),
             done);
      break;
    case 5:
      AddLogTransmitStat(controller,
             ::google::protobuf::down_cast<const ::manage::AddLogTransmitStatRequest*>(request),
             ::google::protobuf::down_cast< ::manage::AddLogTransmitStatResponse*>(response),
             done);
      break;
    case 6:
      PullSwitchConfig(controller,
             ::google::protobuf::down_cast<const ::manage::PullSwitchConfigRequest*>(request),
             ::google::protobuf::down_cast< ::manage::PullSwitchConfigResponse*>(response),
             done);
      break;
    case 7:
      Retransmit(controller,
             ::google::protobuf::down_cast<const ::manage::RetransmitRequest*>(request),
             ::google::protobuf::down_cast< ::manage::RetransmitResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ManageService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::manage::SetLogFilterConfigRequest::default_instance();
    case 1:
      return ::manage::GetLogFilterConfigRequest::default_instance();
    case 2:
      return ::manage::SetLogFieldConfigRequest::default_instance();
    case 3:
      return ::manage::GetLogFieldConfigRequest::default_instance();
    case 4:
      return ::manage::GetLogTransmitStatRequest::default_instance();
    case 5:
      return ::manage::AddLogTransmitStatRequest::default_instance();
    case 6:
      return ::manage::PullSwitchConfigRequest::default_instance();
    case 7:
      return ::manage::RetransmitRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& ManageService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::manage::SetLogFilterConfigResponse::default_instance();
    case 1:
      return ::manage::GetLogFilterConfigResponse::default_instance();
    case 2:
      return ::manage::SetLogFieldConfigResponse::default_instance();
    case 3:
      return ::manage::GetLogFieldConfigResponse::default_instance();
    case 4:
      return ::manage::GetLogTransmitStatResponse::default_instance();
    case 5:
      return ::manage::AddLogTransmitStatResponse::default_instance();
    case 6:
      return ::manage::PullSwitchConfigResponse::default_instance();
    case 7:
      return ::manage::RetransmitResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

ManageService_Stub::ManageService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ManageService_Stub::ManageService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ManageService_Stub::~ManageService_Stub() {
  if (owns_channel_) delete channel_;
}

void ManageService_Stub::SetLogFilterConfig(::google::protobuf::RpcController* controller,
                              const ::manage::SetLogFilterConfigRequest* request,
                              ::manage::SetLogFilterConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ManageService_Stub::GetLogFilterConfig(::google::protobuf::RpcController* controller,
                              const ::manage::GetLogFilterConfigRequest* request,
                              ::manage::GetLogFilterConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ManageService_Stub::SetLogFieldConfig(::google::protobuf::RpcController* controller,
                              const ::manage::SetLogFieldConfigRequest* request,
                              ::manage::SetLogFieldConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void ManageService_Stub::GetLogFieldConfig(::google::protobuf::RpcController* controller,
                              const ::manage::GetLogFieldConfigRequest* request,
                              ::manage::GetLogFieldConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void ManageService_Stub::GetLogTransmitStat(::google::protobuf::RpcController* controller,
                              const ::manage::GetLogTransmitStatRequest* request,
                              ::manage::GetLogTransmitStatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void ManageService_Stub::AddLogTransmitStat(::google::protobuf::RpcController* controller,
                              const ::manage::AddLogTransmitStatRequest* request,
                              ::manage::AddLogTransmitStatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void ManageService_Stub::PullSwitchConfig(::google::protobuf::RpcController* controller,
                              const ::manage::PullSwitchConfigRequest* request,
                              ::manage::PullSwitchConfigResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void ManageService_Stub::Retransmit(::google::protobuf::RpcController* controller,
                              const ::manage::RetransmitRequest* request,
                              ::manage::RetransmitResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace manage

// @@protoc_insertion_point(global_scope)
