
set(TEST_PROTO_SRC test_proto.cc)
set(TEST_LIBCONFIG_SRC test_libconfig.cc)
set(TEST_RANGEITER_SRC test_rangeiter.cc)
set(TEST_TEST_SRC test_test.cc)
set(TEST_REGEX_SRC test_regex.cc)
set(TEST_CONSTEXPR_SRC test_constexpr.cc)
set(TEST_MOVE_SRC test_move.cc)
set(TEST_INITIALIZER_SRC test_initializer.cc)
set(TEST_DECLTYPE_SRC test_decltype.cc)
set(TEST_FUNCTION_SRC test_lambda_function_bind.cc)
set(TEST_CONSTRUCT_REUSE_SRC test_construct_reuse.cc)
set(TEST_VIRTUAL_SRC test_virtual.cc)
set(TEST_TUPLE_SRC test_tuple.cc)
set(TEST_CONTAINER_SWAP_SRC test_container_swap.cc)
set(TEST_STATIC_ASSERT_SRC test_static_assert.cc)
set(TEST_PTR_SRC test_ptr.cc)
set(TEST_NONCOPYABLE_SRC test_noncopyable.cc)
set(TEST_SINGLETON_SRC test_singleton.cc)
set(TEST_FACTORY_SRC test_factory.cc)
set(TEST_THREADPOOL_SRC test_threadpool.cc)
set(TEST_LOCKFREE_SRC test_lockfree.cc)
set(TEST_ROCKSDB_SRC test_rocksdb.cc)
set(TEST_REDIS_SRC test_redis.cc)
set(TEST_CONSISTENTHASH_SRC test_consistent.cc)
include_directories(${THIRDPARTY_INCLUDE_DIR})
include_directories(${BOOST_INCLUDE_DIR})
include_directories(${PROTO_DIR})
include_directories(${COMMON_DIR})
link_directories(${THIRDPARTY_LIB_DIR})

set(ALGORITHM_DIR "${TEST_DIR}/algorithm")
add_subdirectory(${ALGORITHM_DIR})

add_executable(test_proto ${TEST_PROTO_SRC})
target_link_libraries(test_proto pthread)
target_link_libraries(test_proto rt)
target_link_libraries(test_proto glog)
target_link_libraries(test_proto gtest)
target_link_libraries(test_proto sofa-pbrpc)
target_link_libraries(test_proto minos_client)
target_link_libraries(test_proto snappy)
target_link_libraries(test_proto z)

add_executable(test_libconfig ${TEST_LIBCONFIG_SRC})
target_link_libraries(test_libconfig config++)
target_link_libraries(test_libconfig glog)
target_link_libraries(test_libconfig gtest)
target_link_libraries(test_libconfig pthread)

add_executable(test_rangeiter ${TEST_RANGEITER_SRC})
target_link_libraries(test_rangeiter glog)
target_link_libraries(test_rangeiter gtest)
target_link_libraries(test_rangeiter pthread)

add_executable(test_test ${TEST_TEST_SRC})
target_link_libraries(test_test glog)
target_link_libraries(test_test gtest)
target_link_libraries(test_test pthread)

add_executable(test_regex ${TEST_REGEX_SRC})
target_link_libraries(test_regex glog)
target_link_libraries(test_regex gtest)
target_link_libraries(test_regex pthread)
target_link_libraries(test_regex config++)

add_executable(test_constexpr ${TEST_CONSTEXPR_SRC})
target_link_libraries(test_constexpr glog)
target_link_libraries(test_constexpr gtest)
target_link_libraries(test_constexpr pthread)

add_executable(test_move ${TEST_MOVE_SRC})
target_link_libraries(test_move glog)
target_link_libraries(test_move gtest)
target_link_libraries(test_move pthread)

add_executable(test_initializer ${TEST_INITIALIZER_SRC})
target_link_libraries(test_initializer glog)
target_link_libraries(test_initializer gtest)
target_link_libraries(test_initializer pthread)

add_executable(test_decltype ${TEST_DECLTYPE_SRC})
target_link_libraries(test_decltype glog)
target_link_libraries(test_decltype gtest)
target_link_libraries(test_decltype pthread)

add_executable(test_function ${TEST_FUNCTION_SRC})
target_link_libraries(test_function glog)
target_link_libraries(test_function gtest)
target_link_libraries(test_function pthread)

add_executable(test_construct_reuse ${TEST_CONSTRUCT_REUSE_SRC})
target_link_libraries(test_construct_reuse glog)
target_link_libraries(test_construct_reuse gtest)
target_link_libraries(test_construct_reuse pthread)

add_executable(test_virtual ${TEST_VIRTUAL_SRC})
target_link_libraries(test_virtual glog)
target_link_libraries(test_virtual gtest)
target_link_libraries(test_virtual pthread)

add_executable(test_tuple ${TEST_TUPLE_SRC})
target_link_libraries(test_tuple glog)
target_link_libraries(test_tuple gtest)
target_link_libraries(test_tuple pthread)

add_executable(test_static_assert ${TEST_STATIC_ASSERT_SRC})
target_link_libraries(test_static_assert glog)
target_link_libraries(test_static_assert gtest)
target_link_libraries(test_static_assert pthread)

add_executable(test_container_swap ${TEST_CONTAINER_SWAP_SRC})
target_link_libraries(test_container_swap glog)
target_link_libraries(test_container_swap gtest)
target_link_libraries(test_container_swap pthread)

add_executable(test_ptr ${TEST_PTR_SRC})
target_link_libraries(test_ptr glog)
target_link_libraries(test_ptr gtest)
target_link_libraries(test_ptr pthread)

add_executable(test_noncopyable ${TEST_NONCOPYABLE_SRC})
target_link_libraries(test_noncopyable glog)
target_link_libraries(test_noncopyable gtest)
target_link_libraries(test_noncopyable pthread)

add_executable(test_singleton ${TEST_SINGLETON_SRC})
target_link_libraries(test_singleton glog)
target_link_libraries(test_singleton gtest)
target_link_libraries(test_singleton pthread)

add_executable(test_factory ${TEST_FACTORY_SRC})
target_link_libraries(test_factory glog)
target_link_libraries(test_factory gtest)
target_link_libraries(test_factory pthread)

add_executable(test_threadpool ${TEST_THREADPOOL_SRC})
target_link_libraries(test_threadpool glog)
target_link_libraries(test_threadpool gtest)
target_link_libraries(test_threadpool pthread)
target_link_libraries(test_threadpool common)

add_executable(test_lockfree ${TEST_LOCKFREE_SRC})
target_link_libraries(test_lockfree glog)
target_link_libraries(test_lockfree gtest)
target_link_libraries(test_lockfree pthread)

add_executable(test_rocksdb ${TEST_ROCKSDB_SRC})
target_link_libraries(test_rocksdb glog)
target_link_libraries(test_rocksdb gtest)
target_link_libraries(test_rocksdb pthread)
target_link_libraries(test_rocksdb common)

add_executable(test_redis ${TEST_REDIS_SRC})
target_link_libraries(test_redis glog)
target_link_libraries(test_redis gtest)
target_link_libraries(test_redis pthread)
target_link_libraries(test_redis hiredis)

add_executable(test_consistent ${TEST_CONSISTENTHASH_SRC})
target_link_libraries(test_consistent glog)
target_link_libraries(test_consistent gtest)
target_link_libraries(test_consistent pthread)
target_link_libraries(test_consistent common)

